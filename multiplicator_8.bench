# multiplicator

# Input

INPUT(X0)
INPUT(Y0)
INPUT(X1)
INPUT(Y1)
INPUT(X2)
INPUT(Y2)
INPUT(X3)
INPUT(Y3)
INPUT(X4)
INPUT(Y4)
INPUT(X5)
INPUT(Y5)
INPUT(X6)
INPUT(Y6)
INPUT(X7)
INPUT(Y7)

# Prima parte del moltiplicatore: AND che generano i segnali W

W00 = AND(X0, Y0)
W10 = AND(X1, Y0)
W20 = AND(X2, Y0)
W30 = AND(X3, Y0)
W40 = AND(X4, Y0)
W50 = AND(X5, Y0)
W60 = AND(X6, Y0)
W70 = AND(X7, Y0)
W01 = AND(X0, Y1)
W11 = AND(X1, Y1)
W21 = AND(X2, Y1)
W31 = AND(X3, Y1)
W41 = AND(X4, Y1)
W51 = AND(X5, Y1)
W61 = AND(X6, Y1)
W71 = AND(X7, Y1)
W02 = AND(X0, Y2)
W12 = AND(X1, Y2)
W22 = AND(X2, Y2)
W32 = AND(X3, Y2)
W42 = AND(X4, Y2)
W52 = AND(X5, Y2)
W62 = AND(X6, Y2)
W72 = AND(X7, Y2)
W03 = AND(X0, Y3)
W13 = AND(X1, Y3)
W23 = AND(X2, Y3)
W33 = AND(X3, Y3)
W43 = AND(X4, Y3)
W53 = AND(X5, Y3)
W63 = AND(X6, Y3)
W73 = AND(X7, Y3)
W04 = AND(X0, Y4)
W14 = AND(X1, Y4)
W24 = AND(X2, Y4)
W34 = AND(X3, Y4)
W44 = AND(X4, Y4)
W54 = AND(X5, Y4)
W64 = AND(X6, Y4)
W74 = AND(X7, Y4)
W05 = AND(X0, Y5)
W15 = AND(X1, Y5)
W25 = AND(X2, Y5)
W35 = AND(X3, Y5)
W45 = AND(X4, Y5)
W55 = AND(X5, Y5)
W65 = AND(X6, Y5)
W75 = AND(X7, Y5)
W06 = AND(X0, Y6)
W16 = AND(X1, Y6)
W26 = AND(X2, Y6)
W36 = AND(X3, Y6)
W46 = AND(X4, Y6)
W56 = AND(X5, Y6)
W66 = AND(X6, Y6)
W76 = AND(X7, Y6)
W07 = AND(X0, Y7)
W17 = AND(X1, Y7)
W27 = AND(X2, Y7)
W37 = AND(X3, Y7)
W47 = AND(X4, Y7)
W57 = AND(X5, Y7)
W67 = AND(X6, Y7)
W77 = AND(X7, Y7)

# Seconda parte del moltiplicatore: cascata di rca shiftati

# RCA LIVELLO 0:

# HALFADDER LIV 0 BIT 0
SL0D0 = XOR(W01, W10)
CoL0D0 = AND(W01, W10)

# FULLADDER LIV 0 BIT 1
1L0D1 = XOR(W11, W20)
2L0D1 = AND(W11, W20)
3L0D1 = AND(1L0D1, CoL0D0)
SL0D1 = XOR(CoL0D0, 1L0D1)
CoL0D1 = OR(3L0D1, 2L0D1)

# FULLADDER LIV 0 BIT 2
1L0D2 = XOR(W21, W30)
2L0D2 = AND(W21, W30)
3L0D2 = AND(1L0D2, CoL0D1)
SL0D2 = XOR(CoL0D1, 1L0D2)
CoL0D2 = OR(3L0D2, 2L0D2)

# FULLADDER LIV 0 BIT 3
1L0D3 = XOR(W31, W40)
2L0D3 = AND(W31, W40)
3L0D3 = AND(1L0D3, CoL0D2)
SL0D3 = XOR(CoL0D2, 1L0D3)
CoL0D3 = OR(3L0D3, 2L0D3)

# FULLADDER LIV 0 BIT 4
1L0D4 = XOR(W41, W50)
2L0D4 = AND(W41, W50)
3L0D4 = AND(1L0D4, CoL0D3)
SL0D4 = XOR(CoL0D3, 1L0D4)
CoL0D4 = OR(3L0D4, 2L0D4)

# FULLADDER LIV 0 BIT 5
1L0D5 = XOR(W51, W60)
2L0D5 = AND(W51, W60)
3L0D5 = AND(1L0D5, CoL0D4)
SL0D5 = XOR(CoL0D4, 1L0D5)
CoL0D5 = OR(3L0D5, 2L0D5)

# FULLADDER LIV 0 BIT 6
1L0D6 = XOR(W61, W70)
2L0D6 = AND(W61, W70)
3L0D6 = AND(1L0D6, CoL0D5)
SL0D6 = XOR(CoL0D5, 1L0D6)
CoL0D6 = OR(3L0D6, 2L0D6)

# Al livello 0 l'ultimo fulladder avrebbe ingresso 0 quindi metto un halfadder
# HALFADDER LIV 0 BIT 7
CoL0D7 = AND(W71, CoL0D6)
SL0D7 = XOR(CoL0D6, W71)

# RCA LIVELLO 1:

# HALFADDER LIV 1 BIT 0
SL1D0 = XOR(W02, SL0D1)
CoL1D0 = AND(W02, SL0D1)

# FULLADDER LIV 1 BIT 1
1L1D1 = XOR(W12, SL0D2)
2L1D1 = AND(W12, SL0D2)
3L1D1 = AND(1L1D1, CoL1D0)
SL1D1 = XOR(CoL1D0, 1L1D1)
CoL1D1 = OR(3L1D1, 2L1D1)

# FULLADDER LIV 1 BIT 2
1L1D2 = XOR(W22, SL0D3)
2L1D2 = AND(W22, SL0D3)
3L1D2 = AND(1L1D2, CoL1D1)
SL1D2 = XOR(CoL1D1, 1L1D2)
CoL1D2 = OR(3L1D2, 2L1D2)

# FULLADDER LIV 1 BIT 3
1L1D3 = XOR(W32, SL0D4)
2L1D3 = AND(W32, SL0D4)
3L1D3 = AND(1L1D3, CoL1D2)
SL1D3 = XOR(CoL1D2, 1L1D3)
CoL1D3 = OR(3L1D3, 2L1D3)

# FULLADDER LIV 1 BIT 4
1L1D4 = XOR(W42, SL0D5)
2L1D4 = AND(W42, SL0D5)
3L1D4 = AND(1L1D4, CoL1D3)
SL1D4 = XOR(CoL1D3, 1L1D4)
CoL1D4 = OR(3L1D4, 2L1D4)

# FULLADDER LIV 1 BIT 5
1L1D5 = XOR(W52, SL0D6)
2L1D5 = AND(W52, SL0D6)
3L1D5 = AND(1L1D5, CoL1D4)
SL1D5 = XOR(CoL1D4, 1L1D5)
CoL1D5 = OR(3L1D5, 2L1D5)

# FULLADDER LIV 1 BIT 6
1L1D6 = XOR(W62, SL0D7)
2L1D6 = AND(W62, SL0D7)
3L1D6 = AND(1L1D6, CoL1D5)
SL1D6 = XOR(CoL1D5, 1L1D6)
CoL1D6 = OR(3L1D6, 2L1D6)

# FULLADDER LIV 1 BIT 7
1L1D7 = XOR(W72, CoL0D7)
2L1D7 = AND(W72, CoL0D7)
3L1D7 = AND(1L1D7, CoL1D6)
SL1D7 = XOR(CoL1D6, 1L1D7)
CoL1D7 = OR(3L1D7, 2L1D7)

# RCA LIVELLO 2:

# HALFADDER LIV 2 BIT 0
SL2D0 = XOR(W03, SL1D1)
CoL2D0 = AND(W03, SL1D1)

# FULLADDER LIV 2 BIT 1
1L2D1 = XOR(W13, SL1D2)
2L2D1 = AND(W13, SL1D2)
3L2D1 = AND(1L2D1, CoL2D0)
SL2D1 = XOR(CoL2D0, 1L2D1)
CoL2D1 = OR(3L2D1, 2L2D1)

# FULLADDER LIV 2 BIT 2
1L2D2 = XOR(W23, SL1D3)
2L2D2 = AND(W23, SL1D3)
3L2D2 = AND(1L2D2, CoL2D1)
SL2D2 = XOR(CoL2D1, 1L2D2)
CoL2D2 = OR(3L2D2, 2L2D2)

# FULLADDER LIV 2 BIT 3
1L2D3 = XOR(W33, SL1D4)
2L2D3 = AND(W33, SL1D4)
3L2D3 = AND(1L2D3, CoL2D2)
SL2D3 = XOR(CoL2D2, 1L2D3)
CoL2D3 = OR(3L2D3, 2L2D3)

# FULLADDER LIV 2 BIT 4
1L2D4 = XOR(W43, SL1D5)
2L2D4 = AND(W43, SL1D5)
3L2D4 = AND(1L2D4, CoL2D3)
SL2D4 = XOR(CoL2D3, 1L2D4)
CoL2D4 = OR(3L2D4, 2L2D4)

# FULLADDER LIV 2 BIT 5
1L2D5 = XOR(W53, SL1D6)
2L2D5 = AND(W53, SL1D6)
3L2D5 = AND(1L2D5, CoL2D4)
SL2D5 = XOR(CoL2D4, 1L2D5)
CoL2D5 = OR(3L2D5, 2L2D5)

# FULLADDER LIV 2 BIT 6
1L2D6 = XOR(W63, SL1D7)
2L2D6 = AND(W63, SL1D7)
3L2D6 = AND(1L2D6, CoL2D5)
SL2D6 = XOR(CoL2D5, 1L2D6)
CoL2D6 = OR(3L2D6, 2L2D6)

# FULLADDER LIV 2 BIT 7
1L2D7 = XOR(W73, CoL1D7)
2L2D7 = AND(W73, CoL1D7)
3L2D7 = AND(1L2D7, CoL2D6)
SL2D7 = XOR(CoL2D6, 1L2D7)
CoL2D7 = OR(3L2D7, 2L2D7)

# RCA LIVELLO 3:

# HALFADDER LIV 3 BIT 0
SL3D0 = XOR(W04, SL2D1)
CoL3D0 = AND(W04, SL2D1)

# FULLADDER LIV 3 BIT 1
1L3D1 = XOR(W14, SL2D2)
2L3D1 = AND(W14, SL2D2)
3L3D1 = AND(1L3D1, CoL3D0)
SL3D1 = XOR(CoL3D0, 1L3D1)
CoL3D1 = OR(3L3D1, 2L3D1)

# FULLADDER LIV 3 BIT 2
1L3D2 = XOR(W24, SL2D3)
2L3D2 = AND(W24, SL2D3)
3L3D2 = AND(1L3D2, CoL3D1)
SL3D2 = XOR(CoL3D1, 1L3D2)
CoL3D2 = OR(3L3D2, 2L3D2)

# FULLADDER LIV 3 BIT 3
1L3D3 = XOR(W34, SL2D4)
2L3D3 = AND(W34, SL2D4)
3L3D3 = AND(1L3D3, CoL3D2)
SL3D3 = XOR(CoL3D2, 1L3D3)
CoL3D3 = OR(3L3D3, 2L3D3)

# FULLADDER LIV 3 BIT 4
1L3D4 = XOR(W44, SL2D5)
2L3D4 = AND(W44, SL2D5)
3L3D4 = AND(1L3D4, CoL3D3)
SL3D4 = XOR(CoL3D3, 1L3D4)
CoL3D4 = OR(3L3D4, 2L3D4)

# FULLADDER LIV 3 BIT 5
1L3D5 = XOR(W54, SL2D6)
2L3D5 = AND(W54, SL2D6)
3L3D5 = AND(1L3D5, CoL3D4)
SL3D5 = XOR(CoL3D4, 1L3D5)
CoL3D5 = OR(3L3D5, 2L3D5)

# FULLADDER LIV 3 BIT 6
1L3D6 = XOR(W64, SL2D7)
2L3D6 = AND(W64, SL2D7)
3L3D6 = AND(1L3D6, CoL3D5)
SL3D6 = XOR(CoL3D5, 1L3D6)
CoL3D6 = OR(3L3D6, 2L3D6)

# FULLADDER LIV 3 BIT 7
1L3D7 = XOR(W74, CoL2D7)
2L3D7 = AND(W74, CoL2D7)
3L3D7 = AND(1L3D7, CoL3D6)
SL3D7 = XOR(CoL3D6, 1L3D7)
CoL3D7 = OR(3L3D7, 2L3D7)

# RCA LIVELLO 4:

# HALFADDER LIV 4 BIT 0
SL4D0 = XOR(W05, SL3D1)
CoL4D0 = AND(W05, SL3D1)

# FULLADDER LIV 4 BIT 1
1L4D1 = XOR(W15, SL3D2)
2L4D1 = AND(W15, SL3D2)
3L4D1 = AND(1L4D1, CoL4D0)
SL4D1 = XOR(CoL4D0, 1L4D1)
CoL4D1 = OR(3L4D1, 2L4D1)

# FULLADDER LIV 4 BIT 2
1L4D2 = XOR(W25, SL3D3)
2L4D2 = AND(W25, SL3D3)
3L4D2 = AND(1L4D2, CoL4D1)
SL4D2 = XOR(CoL4D1, 1L4D2)
CoL4D2 = OR(3L4D2, 2L4D2)

# FULLADDER LIV 4 BIT 3
1L4D3 = XOR(W35, SL3D4)
2L4D3 = AND(W35, SL3D4)
3L4D3 = AND(1L4D3, CoL4D2)
SL4D3 = XOR(CoL4D2, 1L4D3)
CoL4D3 = OR(3L4D3, 2L4D3)

# FULLADDER LIV 4 BIT 4
1L4D4 = XOR(W45, SL3D5)
2L4D4 = AND(W45, SL3D5)
3L4D4 = AND(1L4D4, CoL4D3)
SL4D4 = XOR(CoL4D3, 1L4D4)
CoL4D4 = OR(3L4D4, 2L4D4)

# FULLADDER LIV 4 BIT 5
1L4D5 = XOR(W55, SL3D6)
2L4D5 = AND(W55, SL3D6)
3L4D5 = AND(1L4D5, CoL4D4)
SL4D5 = XOR(CoL4D4, 1L4D5)
CoL4D5 = OR(3L4D5, 2L4D5)

# FULLADDER LIV 4 BIT 6
1L4D6 = XOR(W65, SL3D7)
2L4D6 = AND(W65, SL3D7)
3L4D6 = AND(1L4D6, CoL4D5)
SL4D6 = XOR(CoL4D5, 1L4D6)
CoL4D6 = OR(3L4D6, 2L4D6)

# FULLADDER LIV 4 BIT 7
1L4D7 = XOR(W75, CoL3D7)
2L4D7 = AND(W75, CoL3D7)
3L4D7 = AND(1L4D7, CoL4D6)
SL4D7 = XOR(CoL4D6, 1L4D7)
CoL4D7 = OR(3L4D7, 2L4D7)

# RCA LIVELLO 5:

# HALFADDER LIV 5 BIT 0
SL5D0 = XOR(W06, SL4D1)
CoL5D0 = AND(W06, SL4D1)

# FULLADDER LIV 5 BIT 1
1L5D1 = XOR(W16, SL4D2)
2L5D1 = AND(W16, SL4D2)
3L5D1 = AND(1L5D1, CoL5D0)
SL5D1 = XOR(CoL5D0, 1L5D1)
CoL5D1 = OR(3L5D1, 2L5D1)

# FULLADDER LIV 5 BIT 2
1L5D2 = XOR(W26, SL4D3)
2L5D2 = AND(W26, SL4D3)
3L5D2 = AND(1L5D2, CoL5D1)
SL5D2 = XOR(CoL5D1, 1L5D2)
CoL5D2 = OR(3L5D2, 2L5D2)

# FULLADDER LIV 5 BIT 3
1L5D3 = XOR(W36, SL4D4)
2L5D3 = AND(W36, SL4D4)
3L5D3 = AND(1L5D3, CoL5D2)
SL5D3 = XOR(CoL5D2, 1L5D3)
CoL5D3 = OR(3L5D3, 2L5D3)

# FULLADDER LIV 5 BIT 4
1L5D4 = XOR(W46, SL4D5)
2L5D4 = AND(W46, SL4D5)
3L5D4 = AND(1L5D4, CoL5D3)
SL5D4 = XOR(CoL5D3, 1L5D4)
CoL5D4 = OR(3L5D4, 2L5D4)

# FULLADDER LIV 5 BIT 5
1L5D5 = XOR(W56, SL4D6)
2L5D5 = AND(W56, SL4D6)
3L5D5 = AND(1L5D5, CoL5D4)
SL5D5 = XOR(CoL5D4, 1L5D5)
CoL5D5 = OR(3L5D5, 2L5D5)

# FULLADDER LIV 5 BIT 6
1L5D6 = XOR(W66, SL4D7)
2L5D6 = AND(W66, SL4D7)
3L5D6 = AND(1L5D6, CoL5D5)
SL5D6 = XOR(CoL5D5, 1L5D6)
CoL5D6 = OR(3L5D6, 2L5D6)

# FULLADDER LIV 5 BIT 7
1L5D7 = XOR(W76, CoL4D7)
2L5D7 = AND(W76, CoL4D7)
3L5D7 = AND(1L5D7, CoL5D6)
SL5D7 = XOR(CoL5D6, 1L5D7)
CoL5D7 = OR(3L5D7, 2L5D7)

# RCA LIVELLO 6:

# HALFADDER LIV 6 BIT 0
SL6D0 = XOR(W07, SL5D1)
CoL6D0 = AND(W07, SL5D1)

# FULLADDER LIV 6 BIT 1
1L6D1 = XOR(W17, SL5D2)
2L6D1 = AND(W17, SL5D2)
3L6D1 = AND(1L6D1, CoL6D0)
SL6D1 = XOR(CoL6D0, 1L6D1)
CoL6D1 = OR(3L6D1, 2L6D1)

# FULLADDER LIV 6 BIT 2
1L6D2 = XOR(W27, SL5D3)
2L6D2 = AND(W27, SL5D3)
3L6D2 = AND(1L6D2, CoL6D1)
SL6D2 = XOR(CoL6D1, 1L6D2)
CoL6D2 = OR(3L6D2, 2L6D2)

# FULLADDER LIV 6 BIT 3
1L6D3 = XOR(W37, SL5D4)
2L6D3 = AND(W37, SL5D4)
3L6D3 = AND(1L6D3, CoL6D2)
SL6D3 = XOR(CoL6D2, 1L6D3)
CoL6D3 = OR(3L6D3, 2L6D3)

# FULLADDER LIV 6 BIT 4
1L6D4 = XOR(W47, SL5D5)
2L6D4 = AND(W47, SL5D5)
3L6D4 = AND(1L6D4, CoL6D3)
SL6D4 = XOR(CoL6D3, 1L6D4)
CoL6D4 = OR(3L6D4, 2L6D4)

# FULLADDER LIV 6 BIT 5
1L6D5 = XOR(W57, SL5D6)
2L6D5 = AND(W57, SL5D6)
3L6D5 = AND(1L6D5, CoL6D4)
SL6D5 = XOR(CoL6D4, 1L6D5)
CoL6D5 = OR(3L6D5, 2L6D5)

# FULLADDER LIV 6 BIT 6
1L6D6 = XOR(W67, SL5D7)
2L6D6 = AND(W67, SL5D7)
3L6D6 = AND(1L6D6, CoL6D5)
SL6D6 = XOR(CoL6D5, 1L6D6)
CoL6D6 = OR(3L6D6, 2L6D6)

# FULLADDER LIV 6 BIT 7
1L6D7 = XOR(W77, CoL5D7)
2L6D7 = AND(W77, CoL5D7)
3L6D7 = AND(1L6D7, CoL6D6)
SL6D7 = XOR(CoL6D6, 1L6D7)
CoL6D7 = OR(3L6D7, 2L6D7)

# Ripple carry adder in cascata al moltiplicatore
# HALFADDER RCA BIT 0
S0 = XOR(W00, R0)
Co0 = AND(W00, R0)

# FULLADDER RCA BIT 1
11 = XOR(SL0D0, R1)
21 = AND(SL0D0, R1)
31 = AND(11, Co0)
S1 = XOR(Co0, 11)
Co1 = OR(31, 21)

# FULLADDER RCA BIT 2
12 = XOR(SL1D0, R2)
22 = AND(SL1D0, R2)
32 = AND(12, Co1)
S2 = XOR(Co1, 12)
Co2 = OR(32, 22)

# FULLADDER RCA BIT 3
13 = XOR(SL2D0, R3)
23 = AND(SL2D0, R3)
33 = AND(13, Co2)
S3 = XOR(Co2, 13)
Co3 = OR(33, 23)

# FULLADDER RCA BIT 4
14 = XOR(SL3D0, R4)
24 = AND(SL3D0, R4)
34 = AND(14, Co3)
S4 = XOR(Co3, 14)
Co4 = OR(34, 24)

# FULLADDER RCA BIT 5
15 = XOR(SL4D0, R5)
25 = AND(SL4D0, R5)
35 = AND(15, Co4)
S5 = XOR(Co4, 15)
Co5 = OR(35, 25)

# FULLADDER RCA BIT 6
16 = XOR(SL5D0, R6)
26 = AND(SL5D0, R6)
36 = AND(16, Co5)
S6 = XOR(Co5, 16)
Co6 = OR(36, 26)

# FULLADDER RCA INGRESSO BIT 7
17 = XOR(SL6D0, R7)
27 = AND(SL6D0, R7)
37 = AND(17, Co6)
S7 = XOR(Co6, 17)
Co7 = OR(37, 27)

# FULLADDER RCA INGRESSO BIT 8
18 = XOR(SL6D1, R8)
28 = AND(SL6D1, R8)
38 = AND(18, Co7)
S8 = XOR(Co7, 18)
Co8 = OR(38, 28)

# FULLADDER RCA INGRESSO BIT 9
19 = XOR(SL6D2, R9)
29 = AND(SL6D2, R9)
39 = AND(19, Co8)
S9 = XOR(Co8, 19)
Co9 = OR(39, 29)

# FULLADDER RCA INGRESSO BIT 10
110 = XOR(SL6D3, R10)
210 = AND(SL6D3, R10)
310 = AND(110, Co9)
S10 = XOR(Co9, 110)
Co10 = OR(310, 210)

# FULLADDER RCA INGRESSO BIT 11
111 = XOR(SL6D4, R11)
211 = AND(SL6D4, R11)
311 = AND(111, Co10)
S11 = XOR(Co10, 111)
Co11 = OR(311, 211)

# FULLADDER RCA INGRESSO BIT 12
112 = XOR(SL6D5, R12)
212 = AND(SL6D5, R12)
312 = AND(112, Co11)
S12 = XOR(Co11, 112)
Co12 = OR(312, 212)

# FULLADDER RCA INGRESSO BIT 13
113 = XOR(SL6D6, R13)
213 = AND(SL6D6, R13)
313 = AND(113, Co12)
S13 = XOR(Co12, 113)
Co13 = OR(313, 213)

# FULLADDER RCA INGRESSO BIT 14
114 = XOR(SL6D7, R14)
214 = AND(SL6D7, R14)
314 = AND(114, Co13)
S14 = XOR(Co13, 114)
Co14 = OR(314, 214)

# Visto che il carry out sarebbe floating metto un halfadder
# HALFADDER RCA INGRESSO BIT 15
115 = XOR(CoL6D7, R15)
S15 = XOR(Co14, 115)

# REGISTRO R DI 16 BIT
R0 = DFF(S0)
OUTPUT(R0)

R1 = DFF(S1)
OUTPUT(R1)

R2 = DFF(S2)
OUTPUT(R2)

R3 = DFF(S3)
OUTPUT(R3)

R4 = DFF(S4)
OUTPUT(R4)

R5 = DFF(S5)
OUTPUT(R5)

R6 = DFF(S6)
OUTPUT(R6)

R7 = DFF(S7)
OUTPUT(R7)

R8 = DFF(S8)
OUTPUT(R8)

R9 = DFF(S9)
OUTPUT(R9)

R10 = DFF(S10)
OUTPUT(R10)

R11 = DFF(S11)
OUTPUT(R11)

R12 = DFF(S12)
OUTPUT(R12)

R13 = DFF(S13)
OUTPUT(R13)

R14 = DFF(S14)
OUTPUT(R14)

R15 = DFF(S15)
OUTPUT(R15)
