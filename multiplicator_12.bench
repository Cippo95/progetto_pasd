# multiplicator

# Input

INPUT(X0)
INPUT(Y0)
INPUT(X1)
INPUT(Y1)
INPUT(X2)
INPUT(Y2)
INPUT(X3)
INPUT(Y3)
INPUT(X4)
INPUT(Y4)
INPUT(X5)
INPUT(Y5)
INPUT(X6)
INPUT(Y6)
INPUT(X7)
INPUT(Y7)
INPUT(X8)
INPUT(Y8)
INPUT(X9)
INPUT(Y9)
INPUT(X10)
INPUT(Y10)
INPUT(X11)
INPUT(Y11)

# 1) Prima parte del moltiplicatore: AND che generano i segnali W

W00 = AND(X0, Y0)
W10 = AND(X1, Y0)
W20 = AND(X2, Y0)
W30 = AND(X3, Y0)
W40 = AND(X4, Y0)
W50 = AND(X5, Y0)
W60 = AND(X6, Y0)
W70 = AND(X7, Y0)
W80 = AND(X8, Y0)
W90 = AND(X9, Y0)
W100 = AND(X10, Y0)
W110 = AND(X11, Y0)
W01 = AND(X0, Y1)
W11 = AND(X1, Y1)
W21 = AND(X2, Y1)
W31 = AND(X3, Y1)
W41 = AND(X4, Y1)
W51 = AND(X5, Y1)
W61 = AND(X6, Y1)
W71 = AND(X7, Y1)
W81 = AND(X8, Y1)
W91 = AND(X9, Y1)
W101 = AND(X10, Y1)
W111 = AND(X11, Y1)
W02 = AND(X0, Y2)
W12 = AND(X1, Y2)
W22 = AND(X2, Y2)
W32 = AND(X3, Y2)
W42 = AND(X4, Y2)
W52 = AND(X5, Y2)
W62 = AND(X6, Y2)
W72 = AND(X7, Y2)
W82 = AND(X8, Y2)
W92 = AND(X9, Y2)
W102 = AND(X10, Y2)
W112 = AND(X11, Y2)
W03 = AND(X0, Y3)
W13 = AND(X1, Y3)
W23 = AND(X2, Y3)
W33 = AND(X3, Y3)
W43 = AND(X4, Y3)
W53 = AND(X5, Y3)
W63 = AND(X6, Y3)
W73 = AND(X7, Y3)
W83 = AND(X8, Y3)
W93 = AND(X9, Y3)
W103 = AND(X10, Y3)
W113 = AND(X11, Y3)
W04 = AND(X0, Y4)
W14 = AND(X1, Y4)
W24 = AND(X2, Y4)
W34 = AND(X3, Y4)
W44 = AND(X4, Y4)
W54 = AND(X5, Y4)
W64 = AND(X6, Y4)
W74 = AND(X7, Y4)
W84 = AND(X8, Y4)
W94 = AND(X9, Y4)
W104 = AND(X10, Y4)
W114 = AND(X11, Y4)
W05 = AND(X0, Y5)
W15 = AND(X1, Y5)
W25 = AND(X2, Y5)
W35 = AND(X3, Y5)
W45 = AND(X4, Y5)
W55 = AND(X5, Y5)
W65 = AND(X6, Y5)
W75 = AND(X7, Y5)
W85 = AND(X8, Y5)
W95 = AND(X9, Y5)
W105 = AND(X10, Y5)
W115 = AND(X11, Y5)
W06 = AND(X0, Y6)
W16 = AND(X1, Y6)
W26 = AND(X2, Y6)
W36 = AND(X3, Y6)
W46 = AND(X4, Y6)
W56 = AND(X5, Y6)
W66 = AND(X6, Y6)
W76 = AND(X7, Y6)
W86 = AND(X8, Y6)
W96 = AND(X9, Y6)
W106 = AND(X10, Y6)
W116 = AND(X11, Y6)
W07 = AND(X0, Y7)
W17 = AND(X1, Y7)
W27 = AND(X2, Y7)
W37 = AND(X3, Y7)
W47 = AND(X4, Y7)
W57 = AND(X5, Y7)
W67 = AND(X6, Y7)
W77 = AND(X7, Y7)
W87 = AND(X8, Y7)
W97 = AND(X9, Y7)
W107 = AND(X10, Y7)
W117 = AND(X11, Y7)
W08 = AND(X0, Y8)
W18 = AND(X1, Y8)
W28 = AND(X2, Y8)
W38 = AND(X3, Y8)
W48 = AND(X4, Y8)
W58 = AND(X5, Y8)
W68 = AND(X6, Y8)
W78 = AND(X7, Y8)
W88 = AND(X8, Y8)
W98 = AND(X9, Y8)
W108 = AND(X10, Y8)
W118 = AND(X11, Y8)
W09 = AND(X0, Y9)
W19 = AND(X1, Y9)
W29 = AND(X2, Y9)
W39 = AND(X3, Y9)
W49 = AND(X4, Y9)
W59 = AND(X5, Y9)
W69 = AND(X6, Y9)
W79 = AND(X7, Y9)
W89 = AND(X8, Y9)
W99 = AND(X9, Y9)
W109 = AND(X10, Y9)
W119 = AND(X11, Y9)
W010 = AND(X0, Y10)
W110 = AND(X1, Y10)
W210 = AND(X2, Y10)
W310 = AND(X3, Y10)
W410 = AND(X4, Y10)
W510 = AND(X5, Y10)
W610 = AND(X6, Y10)
W710 = AND(X7, Y10)
W810 = AND(X8, Y10)
W910 = AND(X9, Y10)
W1010 = AND(X10, Y10)
W1110 = AND(X11, Y10)
W011 = AND(X0, Y11)
W111 = AND(X1, Y11)
W211 = AND(X2, Y11)
W311 = AND(X3, Y11)
W411 = AND(X4, Y11)
W511 = AND(X5, Y11)
W611 = AND(X6, Y11)
W711 = AND(X7, Y11)
W811 = AND(X8, Y11)
W911 = AND(X9, Y11)
W1011 = AND(X10, Y11)
W1111 = AND(X11, Y11)

# 2) Seconda parte del moltiplicatore: cascata di rca shiftati

# RCA LIVELLO 0:

# HALFADDER LIV 0 BIT 0
SL0D0 = XOR(W01, W10)
CoL0D0 = AND(W01, W10)

# FULLADDER LIV 0 BIT 1
1L0D1 = XOR(W11, W20)
2L0D1 = AND(W11, W20)
3L0D1 = AND(1L0D1, CoL0D0)
SL0D1 = XOR(CoL0D0, 1L0D1)
CoL0D1 = OR(3L0D1, 2L0D1)

# FULLADDER LIV 0 BIT 2
1L0D2 = XOR(W21, W30)
2L0D2 = AND(W21, W30)
3L0D2 = AND(1L0D2, CoL0D1)
SL0D2 = XOR(CoL0D1, 1L0D2)
CoL0D2 = OR(3L0D2, 2L0D2)

# FULLADDER LIV 0 BIT 3
1L0D3 = XOR(W31, W40)
2L0D3 = AND(W31, W40)
3L0D3 = AND(1L0D3, CoL0D2)
SL0D3 = XOR(CoL0D2, 1L0D3)
CoL0D3 = OR(3L0D3, 2L0D3)

# FULLADDER LIV 0 BIT 4
1L0D4 = XOR(W41, W50)
2L0D4 = AND(W41, W50)
3L0D4 = AND(1L0D4, CoL0D3)
SL0D4 = XOR(CoL0D3, 1L0D4)
CoL0D4 = OR(3L0D4, 2L0D4)

# FULLADDER LIV 0 BIT 5
1L0D5 = XOR(W51, W60)
2L0D5 = AND(W51, W60)
3L0D5 = AND(1L0D5, CoL0D4)
SL0D5 = XOR(CoL0D4, 1L0D5)
CoL0D5 = OR(3L0D5, 2L0D5)

# FULLADDER LIV 0 BIT 6
1L0D6 = XOR(W61, W70)
2L0D6 = AND(W61, W70)
3L0D6 = AND(1L0D6, CoL0D5)
SL0D6 = XOR(CoL0D5, 1L0D6)
CoL0D6 = OR(3L0D6, 2L0D6)

# FULLADDER LIV 0 BIT 7
1L0D7 = XOR(W71, W80)
2L0D7 = AND(W71, W80)
3L0D7 = AND(1L0D7, CoL0D6)
SL0D7 = XOR(CoL0D6, 1L0D7)
CoL0D7 = OR(3L0D7, 2L0D7)

# FULLADDER LIV 0 BIT 8
1L0D8 = XOR(W81, W90)
2L0D8 = AND(W81, W90)
3L0D8 = AND(1L0D8, CoL0D7)
SL0D8 = XOR(CoL0D7, 1L0D8)
CoL0D8 = OR(3L0D8, 2L0D8)

# FULLADDER LIV 0 BIT 9
1L0D9 = XOR(W91, W100)
2L0D9 = AND(W91, W100)
3L0D9 = AND(1L0D9, CoL0D8)
SL0D9 = XOR(CoL0D8, 1L0D9)
CoL0D9 = OR(3L0D9, 2L0D9)

# FULLADDER LIV 0 BIT 10
1L0D10 = XOR(W101, W110)
2L0D10 = AND(W101, W110)
3L0D10 = AND(1L0D10, CoL0D9)
SL0D10 = XOR(CoL0D9, 1L0D10)
CoL0D10 = OR(3L0D10, 2L0D10)

# Al livello 0 l'ultimo fulladder avrebbe ingresso 0 quindi metto un halfadder
# HALFADDER LIV 0 BIT 11
CoL0D11 = AND(W111, CoL0D10)
SL0D11 = XOR(CoL0D10, W111)

# RCA LIVELLO 1:

# HALFADDER LIV 1 BIT 0
SL1D0 = XOR(W02, SL0D1)
CoL1D0 = AND(W02, SL0D1)

# FULLADDER LIV 1 BIT 1
1L1D1 = XOR(W12, SL0D2)
2L1D1 = AND(W12, SL0D2)
3L1D1 = AND(1L1D1, CoL1D0)
SL1D1 = XOR(CoL1D0, 1L1D1)
CoL1D1 = OR(3L1D1, 2L1D1)

# FULLADDER LIV 1 BIT 2
1L1D2 = XOR(W22, SL0D3)
2L1D2 = AND(W22, SL0D3)
3L1D2 = AND(1L1D2, CoL1D1)
SL1D2 = XOR(CoL1D1, 1L1D2)
CoL1D2 = OR(3L1D2, 2L1D2)

# FULLADDER LIV 1 BIT 3
1L1D3 = XOR(W32, SL0D4)
2L1D3 = AND(W32, SL0D4)
3L1D3 = AND(1L1D3, CoL1D2)
SL1D3 = XOR(CoL1D2, 1L1D3)
CoL1D3 = OR(3L1D3, 2L1D3)

# FULLADDER LIV 1 BIT 4
1L1D4 = XOR(W42, SL0D5)
2L1D4 = AND(W42, SL0D5)
3L1D4 = AND(1L1D4, CoL1D3)
SL1D4 = XOR(CoL1D3, 1L1D4)
CoL1D4 = OR(3L1D4, 2L1D4)

# FULLADDER LIV 1 BIT 5
1L1D5 = XOR(W52, SL0D6)
2L1D5 = AND(W52, SL0D6)
3L1D5 = AND(1L1D5, CoL1D4)
SL1D5 = XOR(CoL1D4, 1L1D5)
CoL1D5 = OR(3L1D5, 2L1D5)

# FULLADDER LIV 1 BIT 6
1L1D6 = XOR(W62, SL0D7)
2L1D6 = AND(W62, SL0D7)
3L1D6 = AND(1L1D6, CoL1D5)
SL1D6 = XOR(CoL1D5, 1L1D6)
CoL1D6 = OR(3L1D6, 2L1D6)

# FULLADDER LIV 1 BIT 7
1L1D7 = XOR(W72, SL0D8)
2L1D7 = AND(W72, SL0D8)
3L1D7 = AND(1L1D7, CoL1D6)
SL1D7 = XOR(CoL1D6, 1L1D7)
CoL1D7 = OR(3L1D7, 2L1D7)

# FULLADDER LIV 1 BIT 8
1L1D8 = XOR(W82, SL0D9)
2L1D8 = AND(W82, SL0D9)
3L1D8 = AND(1L1D8, CoL1D7)
SL1D8 = XOR(CoL1D7, 1L1D8)
CoL1D8 = OR(3L1D8, 2L1D8)

# FULLADDER LIV 1 BIT 9
1L1D9 = XOR(W92, SL0D10)
2L1D9 = AND(W92, SL0D10)
3L1D9 = AND(1L1D9, CoL1D8)
SL1D9 = XOR(CoL1D8, 1L1D9)
CoL1D9 = OR(3L1D9, 2L1D9)

# FULLADDER LIV 1 BIT 10
1L1D10 = XOR(W102, SL0D11)
2L1D10 = AND(W102, SL0D11)
3L1D10 = AND(1L1D10, CoL1D9)
SL1D10 = XOR(CoL1D9, 1L1D10)
CoL1D10 = OR(3L1D10, 2L1D10)

# FULLADDER LIV 1 BIT 11
1L1D11 = XOR(W112, CoL0D11)
2L1D11 = AND(W112, CoL0D11)
3L1D11 = AND(1L1D11, CoL1D10)
SL1D11 = XOR(CoL1D10, 1L1D11)
CoL1D11 = OR(3L1D11, 2L1D11)

# RCA LIVELLO 2:

# HALFADDER LIV 2 BIT 0
SL2D0 = XOR(W03, SL1D1)
CoL2D0 = AND(W03, SL1D1)

# FULLADDER LIV 2 BIT 1
1L2D1 = XOR(W13, SL1D2)
2L2D1 = AND(W13, SL1D2)
3L2D1 = AND(1L2D1, CoL2D0)
SL2D1 = XOR(CoL2D0, 1L2D1)
CoL2D1 = OR(3L2D1, 2L2D1)

# FULLADDER LIV 2 BIT 2
1L2D2 = XOR(W23, SL1D3)
2L2D2 = AND(W23, SL1D3)
3L2D2 = AND(1L2D2, CoL2D1)
SL2D2 = XOR(CoL2D1, 1L2D2)
CoL2D2 = OR(3L2D2, 2L2D2)

# FULLADDER LIV 2 BIT 3
1L2D3 = XOR(W33, SL1D4)
2L2D3 = AND(W33, SL1D4)
3L2D3 = AND(1L2D3, CoL2D2)
SL2D3 = XOR(CoL2D2, 1L2D3)
CoL2D3 = OR(3L2D3, 2L2D3)

# FULLADDER LIV 2 BIT 4
1L2D4 = XOR(W43, SL1D5)
2L2D4 = AND(W43, SL1D5)
3L2D4 = AND(1L2D4, CoL2D3)
SL2D4 = XOR(CoL2D3, 1L2D4)
CoL2D4 = OR(3L2D4, 2L2D4)

# FULLADDER LIV 2 BIT 5
1L2D5 = XOR(W53, SL1D6)
2L2D5 = AND(W53, SL1D6)
3L2D5 = AND(1L2D5, CoL2D4)
SL2D5 = XOR(CoL2D4, 1L2D5)
CoL2D5 = OR(3L2D5, 2L2D5)

# FULLADDER LIV 2 BIT 6
1L2D6 = XOR(W63, SL1D7)
2L2D6 = AND(W63, SL1D7)
3L2D6 = AND(1L2D6, CoL2D5)
SL2D6 = XOR(CoL2D5, 1L2D6)
CoL2D6 = OR(3L2D6, 2L2D6)

# FULLADDER LIV 2 BIT 7
1L2D7 = XOR(W73, SL1D8)
2L2D7 = AND(W73, SL1D8)
3L2D7 = AND(1L2D7, CoL2D6)
SL2D7 = XOR(CoL2D6, 1L2D7)
CoL2D7 = OR(3L2D7, 2L2D7)

# FULLADDER LIV 2 BIT 8
1L2D8 = XOR(W83, SL1D9)
2L2D8 = AND(W83, SL1D9)
3L2D8 = AND(1L2D8, CoL2D7)
SL2D8 = XOR(CoL2D7, 1L2D8)
CoL2D8 = OR(3L2D8, 2L2D8)

# FULLADDER LIV 2 BIT 9
1L2D9 = XOR(W93, SL1D10)
2L2D9 = AND(W93, SL1D10)
3L2D9 = AND(1L2D9, CoL2D8)
SL2D9 = XOR(CoL2D8, 1L2D9)
CoL2D9 = OR(3L2D9, 2L2D9)

# FULLADDER LIV 2 BIT 10
1L2D10 = XOR(W103, SL1D11)
2L2D10 = AND(W103, SL1D11)
3L2D10 = AND(1L2D10, CoL2D9)
SL2D10 = XOR(CoL2D9, 1L2D10)
CoL2D10 = OR(3L2D10, 2L2D10)

# FULLADDER LIV 2 BIT 11
1L2D11 = XOR(W113, CoL1D11)
2L2D11 = AND(W113, CoL1D11)
3L2D11 = AND(1L2D11, CoL2D10)
SL2D11 = XOR(CoL2D10, 1L2D11)
CoL2D11 = OR(3L2D11, 2L2D11)

# RCA LIVELLO 3:

# HALFADDER LIV 3 BIT 0
SL3D0 = XOR(W04, SL2D1)
CoL3D0 = AND(W04, SL2D1)

# FULLADDER LIV 3 BIT 1
1L3D1 = XOR(W14, SL2D2)
2L3D1 = AND(W14, SL2D2)
3L3D1 = AND(1L3D1, CoL3D0)
SL3D1 = XOR(CoL3D0, 1L3D1)
CoL3D1 = OR(3L3D1, 2L3D1)

# FULLADDER LIV 3 BIT 2
1L3D2 = XOR(W24, SL2D3)
2L3D2 = AND(W24, SL2D3)
3L3D2 = AND(1L3D2, CoL3D1)
SL3D2 = XOR(CoL3D1, 1L3D2)
CoL3D2 = OR(3L3D2, 2L3D2)

# FULLADDER LIV 3 BIT 3
1L3D3 = XOR(W34, SL2D4)
2L3D3 = AND(W34, SL2D4)
3L3D3 = AND(1L3D3, CoL3D2)
SL3D3 = XOR(CoL3D2, 1L3D3)
CoL3D3 = OR(3L3D3, 2L3D3)

# FULLADDER LIV 3 BIT 4
1L3D4 = XOR(W44, SL2D5)
2L3D4 = AND(W44, SL2D5)
3L3D4 = AND(1L3D4, CoL3D3)
SL3D4 = XOR(CoL3D3, 1L3D4)
CoL3D4 = OR(3L3D4, 2L3D4)

# FULLADDER LIV 3 BIT 5
1L3D5 = XOR(W54, SL2D6)
2L3D5 = AND(W54, SL2D6)
3L3D5 = AND(1L3D5, CoL3D4)
SL3D5 = XOR(CoL3D4, 1L3D5)
CoL3D5 = OR(3L3D5, 2L3D5)

# FULLADDER LIV 3 BIT 6
1L3D6 = XOR(W64, SL2D7)
2L3D6 = AND(W64, SL2D7)
3L3D6 = AND(1L3D6, CoL3D5)
SL3D6 = XOR(CoL3D5, 1L3D6)
CoL3D6 = OR(3L3D6, 2L3D6)

# FULLADDER LIV 3 BIT 7
1L3D7 = XOR(W74, SL2D8)
2L3D7 = AND(W74, SL2D8)
3L3D7 = AND(1L3D7, CoL3D6)
SL3D7 = XOR(CoL3D6, 1L3D7)
CoL3D7 = OR(3L3D7, 2L3D7)

# FULLADDER LIV 3 BIT 8
1L3D8 = XOR(W84, SL2D9)
2L3D8 = AND(W84, SL2D9)
3L3D8 = AND(1L3D8, CoL3D7)
SL3D8 = XOR(CoL3D7, 1L3D8)
CoL3D8 = OR(3L3D8, 2L3D8)

# FULLADDER LIV 3 BIT 9
1L3D9 = XOR(W94, SL2D10)
2L3D9 = AND(W94, SL2D10)
3L3D9 = AND(1L3D9, CoL3D8)
SL3D9 = XOR(CoL3D8, 1L3D9)
CoL3D9 = OR(3L3D9, 2L3D9)

# FULLADDER LIV 3 BIT 10
1L3D10 = XOR(W104, SL2D11)
2L3D10 = AND(W104, SL2D11)
3L3D10 = AND(1L3D10, CoL3D9)
SL3D10 = XOR(CoL3D9, 1L3D10)
CoL3D10 = OR(3L3D10, 2L3D10)

# FULLADDER LIV 3 BIT 11
1L3D11 = XOR(W114, CoL2D11)
2L3D11 = AND(W114, CoL2D11)
3L3D11 = AND(1L3D11, CoL3D10)
SL3D11 = XOR(CoL3D10, 1L3D11)
CoL3D11 = OR(3L3D11, 2L3D11)

# RCA LIVELLO 4:

# HALFADDER LIV 4 BIT 0
SL4D0 = XOR(W05, SL3D1)
CoL4D0 = AND(W05, SL3D1)

# FULLADDER LIV 4 BIT 1
1L4D1 = XOR(W15, SL3D2)
2L4D1 = AND(W15, SL3D2)
3L4D1 = AND(1L4D1, CoL4D0)
SL4D1 = XOR(CoL4D0, 1L4D1)
CoL4D1 = OR(3L4D1, 2L4D1)

# FULLADDER LIV 4 BIT 2
1L4D2 = XOR(W25, SL3D3)
2L4D2 = AND(W25, SL3D3)
3L4D2 = AND(1L4D2, CoL4D1)
SL4D2 = XOR(CoL4D1, 1L4D2)
CoL4D2 = OR(3L4D2, 2L4D2)

# FULLADDER LIV 4 BIT 3
1L4D3 = XOR(W35, SL3D4)
2L4D3 = AND(W35, SL3D4)
3L4D3 = AND(1L4D3, CoL4D2)
SL4D3 = XOR(CoL4D2, 1L4D3)
CoL4D3 = OR(3L4D3, 2L4D3)

# FULLADDER LIV 4 BIT 4
1L4D4 = XOR(W45, SL3D5)
2L4D4 = AND(W45, SL3D5)
3L4D4 = AND(1L4D4, CoL4D3)
SL4D4 = XOR(CoL4D3, 1L4D4)
CoL4D4 = OR(3L4D4, 2L4D4)

# FULLADDER LIV 4 BIT 5
1L4D5 = XOR(W55, SL3D6)
2L4D5 = AND(W55, SL3D6)
3L4D5 = AND(1L4D5, CoL4D4)
SL4D5 = XOR(CoL4D4, 1L4D5)
CoL4D5 = OR(3L4D5, 2L4D5)

# FULLADDER LIV 4 BIT 6
1L4D6 = XOR(W65, SL3D7)
2L4D6 = AND(W65, SL3D7)
3L4D6 = AND(1L4D6, CoL4D5)
SL4D6 = XOR(CoL4D5, 1L4D6)
CoL4D6 = OR(3L4D6, 2L4D6)

# FULLADDER LIV 4 BIT 7
1L4D7 = XOR(W75, SL3D8)
2L4D7 = AND(W75, SL3D8)
3L4D7 = AND(1L4D7, CoL4D6)
SL4D7 = XOR(CoL4D6, 1L4D7)
CoL4D7 = OR(3L4D7, 2L4D7)

# FULLADDER LIV 4 BIT 8
1L4D8 = XOR(W85, SL3D9)
2L4D8 = AND(W85, SL3D9)
3L4D8 = AND(1L4D8, CoL4D7)
SL4D8 = XOR(CoL4D7, 1L4D8)
CoL4D8 = OR(3L4D8, 2L4D8)

# FULLADDER LIV 4 BIT 9
1L4D9 = XOR(W95, SL3D10)
2L4D9 = AND(W95, SL3D10)
3L4D9 = AND(1L4D9, CoL4D8)
SL4D9 = XOR(CoL4D8, 1L4D9)
CoL4D9 = OR(3L4D9, 2L4D9)

# FULLADDER LIV 4 BIT 10
1L4D10 = XOR(W105, SL3D11)
2L4D10 = AND(W105, SL3D11)
3L4D10 = AND(1L4D10, CoL4D9)
SL4D10 = XOR(CoL4D9, 1L4D10)
CoL4D10 = OR(3L4D10, 2L4D10)

# FULLADDER LIV 4 BIT 11
1L4D11 = XOR(W115, CoL3D11)
2L4D11 = AND(W115, CoL3D11)
3L4D11 = AND(1L4D11, CoL4D10)
SL4D11 = XOR(CoL4D10, 1L4D11)
CoL4D11 = OR(3L4D11, 2L4D11)

# RCA LIVELLO 5:

# HALFADDER LIV 5 BIT 0
SL5D0 = XOR(W06, SL4D1)
CoL5D0 = AND(W06, SL4D1)

# FULLADDER LIV 5 BIT 1
1L5D1 = XOR(W16, SL4D2)
2L5D1 = AND(W16, SL4D2)
3L5D1 = AND(1L5D1, CoL5D0)
SL5D1 = XOR(CoL5D0, 1L5D1)
CoL5D1 = OR(3L5D1, 2L5D1)

# FULLADDER LIV 5 BIT 2
1L5D2 = XOR(W26, SL4D3)
2L5D2 = AND(W26, SL4D3)
3L5D2 = AND(1L5D2, CoL5D1)
SL5D2 = XOR(CoL5D1, 1L5D2)
CoL5D2 = OR(3L5D2, 2L5D2)

# FULLADDER LIV 5 BIT 3
1L5D3 = XOR(W36, SL4D4)
2L5D3 = AND(W36, SL4D4)
3L5D3 = AND(1L5D3, CoL5D2)
SL5D3 = XOR(CoL5D2, 1L5D3)
CoL5D3 = OR(3L5D3, 2L5D3)

# FULLADDER LIV 5 BIT 4
1L5D4 = XOR(W46, SL4D5)
2L5D4 = AND(W46, SL4D5)
3L5D4 = AND(1L5D4, CoL5D3)
SL5D4 = XOR(CoL5D3, 1L5D4)
CoL5D4 = OR(3L5D4, 2L5D4)

# FULLADDER LIV 5 BIT 5
1L5D5 = XOR(W56, SL4D6)
2L5D5 = AND(W56, SL4D6)
3L5D5 = AND(1L5D5, CoL5D4)
SL5D5 = XOR(CoL5D4, 1L5D5)
CoL5D5 = OR(3L5D5, 2L5D5)

# FULLADDER LIV 5 BIT 6
1L5D6 = XOR(W66, SL4D7)
2L5D6 = AND(W66, SL4D7)
3L5D6 = AND(1L5D6, CoL5D5)
SL5D6 = XOR(CoL5D5, 1L5D6)
CoL5D6 = OR(3L5D6, 2L5D6)

# FULLADDER LIV 5 BIT 7
1L5D7 = XOR(W76, SL4D8)
2L5D7 = AND(W76, SL4D8)
3L5D7 = AND(1L5D7, CoL5D6)
SL5D7 = XOR(CoL5D6, 1L5D7)
CoL5D7 = OR(3L5D7, 2L5D7)

# FULLADDER LIV 5 BIT 8
1L5D8 = XOR(W86, SL4D9)
2L5D8 = AND(W86, SL4D9)
3L5D8 = AND(1L5D8, CoL5D7)
SL5D8 = XOR(CoL5D7, 1L5D8)
CoL5D8 = OR(3L5D8, 2L5D8)

# FULLADDER LIV 5 BIT 9
1L5D9 = XOR(W96, SL4D10)
2L5D9 = AND(W96, SL4D10)
3L5D9 = AND(1L5D9, CoL5D8)
SL5D9 = XOR(CoL5D8, 1L5D9)
CoL5D9 = OR(3L5D9, 2L5D9)

# FULLADDER LIV 5 BIT 10
1L5D10 = XOR(W106, SL4D11)
2L5D10 = AND(W106, SL4D11)
3L5D10 = AND(1L5D10, CoL5D9)
SL5D10 = XOR(CoL5D9, 1L5D10)
CoL5D10 = OR(3L5D10, 2L5D10)

# FULLADDER LIV 5 BIT 11
1L5D11 = XOR(W116, CoL4D11)
2L5D11 = AND(W116, CoL4D11)
3L5D11 = AND(1L5D11, CoL5D10)
SL5D11 = XOR(CoL5D10, 1L5D11)
CoL5D11 = OR(3L5D11, 2L5D11)

# RCA LIVELLO 6:

# HALFADDER LIV 6 BIT 0
SL6D0 = XOR(W07, SL5D1)
CoL6D0 = AND(W07, SL5D1)

# FULLADDER LIV 6 BIT 1
1L6D1 = XOR(W17, SL5D2)
2L6D1 = AND(W17, SL5D2)
3L6D1 = AND(1L6D1, CoL6D0)
SL6D1 = XOR(CoL6D0, 1L6D1)
CoL6D1 = OR(3L6D1, 2L6D1)

# FULLADDER LIV 6 BIT 2
1L6D2 = XOR(W27, SL5D3)
2L6D2 = AND(W27, SL5D3)
3L6D2 = AND(1L6D2, CoL6D1)
SL6D2 = XOR(CoL6D1, 1L6D2)
CoL6D2 = OR(3L6D2, 2L6D2)

# FULLADDER LIV 6 BIT 3
1L6D3 = XOR(W37, SL5D4)
2L6D3 = AND(W37, SL5D4)
3L6D3 = AND(1L6D3, CoL6D2)
SL6D3 = XOR(CoL6D2, 1L6D3)
CoL6D3 = OR(3L6D3, 2L6D3)

# FULLADDER LIV 6 BIT 4
1L6D4 = XOR(W47, SL5D5)
2L6D4 = AND(W47, SL5D5)
3L6D4 = AND(1L6D4, CoL6D3)
SL6D4 = XOR(CoL6D3, 1L6D4)
CoL6D4 = OR(3L6D4, 2L6D4)

# FULLADDER LIV 6 BIT 5
1L6D5 = XOR(W57, SL5D6)
2L6D5 = AND(W57, SL5D6)
3L6D5 = AND(1L6D5, CoL6D4)
SL6D5 = XOR(CoL6D4, 1L6D5)
CoL6D5 = OR(3L6D5, 2L6D5)

# FULLADDER LIV 6 BIT 6
1L6D6 = XOR(W67, SL5D7)
2L6D6 = AND(W67, SL5D7)
3L6D6 = AND(1L6D6, CoL6D5)
SL6D6 = XOR(CoL6D5, 1L6D6)
CoL6D6 = OR(3L6D6, 2L6D6)

# FULLADDER LIV 6 BIT 7
1L6D7 = XOR(W77, SL5D8)
2L6D7 = AND(W77, SL5D8)
3L6D7 = AND(1L6D7, CoL6D6)
SL6D7 = XOR(CoL6D6, 1L6D7)
CoL6D7 = OR(3L6D7, 2L6D7)

# FULLADDER LIV 6 BIT 8
1L6D8 = XOR(W87, SL5D9)
2L6D8 = AND(W87, SL5D9)
3L6D8 = AND(1L6D8, CoL6D7)
SL6D8 = XOR(CoL6D7, 1L6D8)
CoL6D8 = OR(3L6D8, 2L6D8)

# FULLADDER LIV 6 BIT 9
1L6D9 = XOR(W97, SL5D10)
2L6D9 = AND(W97, SL5D10)
3L6D9 = AND(1L6D9, CoL6D8)
SL6D9 = XOR(CoL6D8, 1L6D9)
CoL6D9 = OR(3L6D9, 2L6D9)

# FULLADDER LIV 6 BIT 10
1L6D10 = XOR(W107, SL5D11)
2L6D10 = AND(W107, SL5D11)
3L6D10 = AND(1L6D10, CoL6D9)
SL6D10 = XOR(CoL6D9, 1L6D10)
CoL6D10 = OR(3L6D10, 2L6D10)

# FULLADDER LIV 6 BIT 11
1L6D11 = XOR(W117, CoL5D11)
2L6D11 = AND(W117, CoL5D11)
3L6D11 = AND(1L6D11, CoL6D10)
SL6D11 = XOR(CoL6D10, 1L6D11)
CoL6D11 = OR(3L6D11, 2L6D11)

# RCA LIVELLO 7:

# HALFADDER LIV 7 BIT 0
SL7D0 = XOR(W08, SL6D1)
CoL7D0 = AND(W08, SL6D1)

# FULLADDER LIV 7 BIT 1
1L7D1 = XOR(W18, SL6D2)
2L7D1 = AND(W18, SL6D2)
3L7D1 = AND(1L7D1, CoL7D0)
SL7D1 = XOR(CoL7D0, 1L7D1)
CoL7D1 = OR(3L7D1, 2L7D1)

# FULLADDER LIV 7 BIT 2
1L7D2 = XOR(W28, SL6D3)
2L7D2 = AND(W28, SL6D3)
3L7D2 = AND(1L7D2, CoL7D1)
SL7D2 = XOR(CoL7D1, 1L7D2)
CoL7D2 = OR(3L7D2, 2L7D2)

# FULLADDER LIV 7 BIT 3
1L7D3 = XOR(W38, SL6D4)
2L7D3 = AND(W38, SL6D4)
3L7D3 = AND(1L7D3, CoL7D2)
SL7D3 = XOR(CoL7D2, 1L7D3)
CoL7D3 = OR(3L7D3, 2L7D3)

# FULLADDER LIV 7 BIT 4
1L7D4 = XOR(W48, SL6D5)
2L7D4 = AND(W48, SL6D5)
3L7D4 = AND(1L7D4, CoL7D3)
SL7D4 = XOR(CoL7D3, 1L7D4)
CoL7D4 = OR(3L7D4, 2L7D4)

# FULLADDER LIV 7 BIT 5
1L7D5 = XOR(W58, SL6D6)
2L7D5 = AND(W58, SL6D6)
3L7D5 = AND(1L7D5, CoL7D4)
SL7D5 = XOR(CoL7D4, 1L7D5)
CoL7D5 = OR(3L7D5, 2L7D5)

# FULLADDER LIV 7 BIT 6
1L7D6 = XOR(W68, SL6D7)
2L7D6 = AND(W68, SL6D7)
3L7D6 = AND(1L7D6, CoL7D5)
SL7D6 = XOR(CoL7D5, 1L7D6)
CoL7D6 = OR(3L7D6, 2L7D6)

# FULLADDER LIV 7 BIT 7
1L7D7 = XOR(W78, SL6D8)
2L7D7 = AND(W78, SL6D8)
3L7D7 = AND(1L7D7, CoL7D6)
SL7D7 = XOR(CoL7D6, 1L7D7)
CoL7D7 = OR(3L7D7, 2L7D7)

# FULLADDER LIV 7 BIT 8
1L7D8 = XOR(W88, SL6D9)
2L7D8 = AND(W88, SL6D9)
3L7D8 = AND(1L7D8, CoL7D7)
SL7D8 = XOR(CoL7D7, 1L7D8)
CoL7D8 = OR(3L7D8, 2L7D8)

# FULLADDER LIV 7 BIT 9
1L7D9 = XOR(W98, SL6D10)
2L7D9 = AND(W98, SL6D10)
3L7D9 = AND(1L7D9, CoL7D8)
SL7D9 = XOR(CoL7D8, 1L7D9)
CoL7D9 = OR(3L7D9, 2L7D9)

# FULLADDER LIV 7 BIT 10
1L7D10 = XOR(W108, SL6D11)
2L7D10 = AND(W108, SL6D11)
3L7D10 = AND(1L7D10, CoL7D9)
SL7D10 = XOR(CoL7D9, 1L7D10)
CoL7D10 = OR(3L7D10, 2L7D10)

# FULLADDER LIV 7 BIT 11
1L7D11 = XOR(W118, CoL6D11)
2L7D11 = AND(W118, CoL6D11)
3L7D11 = AND(1L7D11, CoL7D10)
SL7D11 = XOR(CoL7D10, 1L7D11)
CoL7D11 = OR(3L7D11, 2L7D11)

# RCA LIVELLO 8:

# HALFADDER LIV 8 BIT 0
SL8D0 = XOR(W09, SL7D1)
CoL8D0 = AND(W09, SL7D1)

# FULLADDER LIV 8 BIT 1
1L8D1 = XOR(W19, SL7D2)
2L8D1 = AND(W19, SL7D2)
3L8D1 = AND(1L8D1, CoL8D0)
SL8D1 = XOR(CoL8D0, 1L8D1)
CoL8D1 = OR(3L8D1, 2L8D1)

# FULLADDER LIV 8 BIT 2
1L8D2 = XOR(W29, SL7D3)
2L8D2 = AND(W29, SL7D3)
3L8D2 = AND(1L8D2, CoL8D1)
SL8D2 = XOR(CoL8D1, 1L8D2)
CoL8D2 = OR(3L8D2, 2L8D2)

# FULLADDER LIV 8 BIT 3
1L8D3 = XOR(W39, SL7D4)
2L8D3 = AND(W39, SL7D4)
3L8D3 = AND(1L8D3, CoL8D2)
SL8D3 = XOR(CoL8D2, 1L8D3)
CoL8D3 = OR(3L8D3, 2L8D3)

# FULLADDER LIV 8 BIT 4
1L8D4 = XOR(W49, SL7D5)
2L8D4 = AND(W49, SL7D5)
3L8D4 = AND(1L8D4, CoL8D3)
SL8D4 = XOR(CoL8D3, 1L8D4)
CoL8D4 = OR(3L8D4, 2L8D4)

# FULLADDER LIV 8 BIT 5
1L8D5 = XOR(W59, SL7D6)
2L8D5 = AND(W59, SL7D6)
3L8D5 = AND(1L8D5, CoL8D4)
SL8D5 = XOR(CoL8D4, 1L8D5)
CoL8D5 = OR(3L8D5, 2L8D5)

# FULLADDER LIV 8 BIT 6
1L8D6 = XOR(W69, SL7D7)
2L8D6 = AND(W69, SL7D7)
3L8D6 = AND(1L8D6, CoL8D5)
SL8D6 = XOR(CoL8D5, 1L8D6)
CoL8D6 = OR(3L8D6, 2L8D6)

# FULLADDER LIV 8 BIT 7
1L8D7 = XOR(W79, SL7D8)
2L8D7 = AND(W79, SL7D8)
3L8D7 = AND(1L8D7, CoL8D6)
SL8D7 = XOR(CoL8D6, 1L8D7)
CoL8D7 = OR(3L8D7, 2L8D7)

# FULLADDER LIV 8 BIT 8
1L8D8 = XOR(W89, SL7D9)
2L8D8 = AND(W89, SL7D9)
3L8D8 = AND(1L8D8, CoL8D7)
SL8D8 = XOR(CoL8D7, 1L8D8)
CoL8D8 = OR(3L8D8, 2L8D8)

# FULLADDER LIV 8 BIT 9
1L8D9 = XOR(W99, SL7D10)
2L8D9 = AND(W99, SL7D10)
3L8D9 = AND(1L8D9, CoL8D8)
SL8D9 = XOR(CoL8D8, 1L8D9)
CoL8D9 = OR(3L8D9, 2L8D9)

# FULLADDER LIV 8 BIT 10
1L8D10 = XOR(W109, SL7D11)
2L8D10 = AND(W109, SL7D11)
3L8D10 = AND(1L8D10, CoL8D9)
SL8D10 = XOR(CoL8D9, 1L8D10)
CoL8D10 = OR(3L8D10, 2L8D10)

# FULLADDER LIV 8 BIT 11
1L8D11 = XOR(W119, CoL7D11)
2L8D11 = AND(W119, CoL7D11)
3L8D11 = AND(1L8D11, CoL8D10)
SL8D11 = XOR(CoL8D10, 1L8D11)
CoL8D11 = OR(3L8D11, 2L8D11)

# RCA LIVELLO 9:

# HALFADDER LIV 9 BIT 0
SL9D0 = XOR(W010, SL8D1)
CoL9D0 = AND(W010, SL8D1)

# FULLADDER LIV 9 BIT 1
1L9D1 = XOR(W110, SL8D2)
2L9D1 = AND(W110, SL8D2)
3L9D1 = AND(1L9D1, CoL9D0)
SL9D1 = XOR(CoL9D0, 1L9D1)
CoL9D1 = OR(3L9D1, 2L9D1)

# FULLADDER LIV 9 BIT 2
1L9D2 = XOR(W210, SL8D3)
2L9D2 = AND(W210, SL8D3)
3L9D2 = AND(1L9D2, CoL9D1)
SL9D2 = XOR(CoL9D1, 1L9D2)
CoL9D2 = OR(3L9D2, 2L9D2)

# FULLADDER LIV 9 BIT 3
1L9D3 = XOR(W310, SL8D4)
2L9D3 = AND(W310, SL8D4)
3L9D3 = AND(1L9D3, CoL9D2)
SL9D3 = XOR(CoL9D2, 1L9D3)
CoL9D3 = OR(3L9D3, 2L9D3)

# FULLADDER LIV 9 BIT 4
1L9D4 = XOR(W410, SL8D5)
2L9D4 = AND(W410, SL8D5)
3L9D4 = AND(1L9D4, CoL9D3)
SL9D4 = XOR(CoL9D3, 1L9D4)
CoL9D4 = OR(3L9D4, 2L9D4)

# FULLADDER LIV 9 BIT 5
1L9D5 = XOR(W510, SL8D6)
2L9D5 = AND(W510, SL8D6)
3L9D5 = AND(1L9D5, CoL9D4)
SL9D5 = XOR(CoL9D4, 1L9D5)
CoL9D5 = OR(3L9D5, 2L9D5)

# FULLADDER LIV 9 BIT 6
1L9D6 = XOR(W610, SL8D7)
2L9D6 = AND(W610, SL8D7)
3L9D6 = AND(1L9D6, CoL9D5)
SL9D6 = XOR(CoL9D5, 1L9D6)
CoL9D6 = OR(3L9D6, 2L9D6)

# FULLADDER LIV 9 BIT 7
1L9D7 = XOR(W710, SL8D8)
2L9D7 = AND(W710, SL8D8)
3L9D7 = AND(1L9D7, CoL9D6)
SL9D7 = XOR(CoL9D6, 1L9D7)
CoL9D7 = OR(3L9D7, 2L9D7)

# FULLADDER LIV 9 BIT 8
1L9D8 = XOR(W810, SL8D9)
2L9D8 = AND(W810, SL8D9)
3L9D8 = AND(1L9D8, CoL9D7)
SL9D8 = XOR(CoL9D7, 1L9D8)
CoL9D8 = OR(3L9D8, 2L9D8)

# FULLADDER LIV 9 BIT 9
1L9D9 = XOR(W910, SL8D10)
2L9D9 = AND(W910, SL8D10)
3L9D9 = AND(1L9D9, CoL9D8)
SL9D9 = XOR(CoL9D8, 1L9D9)
CoL9D9 = OR(3L9D9, 2L9D9)

# FULLADDER LIV 9 BIT 10
1L9D10 = XOR(W1010, SL8D11)
2L9D10 = AND(W1010, SL8D11)
3L9D10 = AND(1L9D10, CoL9D9)
SL9D10 = XOR(CoL9D9, 1L9D10)
CoL9D10 = OR(3L9D10, 2L9D10)

# FULLADDER LIV 9 BIT 11
1L9D11 = XOR(W1110, CoL8D11)
2L9D11 = AND(W1110, CoL8D11)
3L9D11 = AND(1L9D11, CoL9D10)
SL9D11 = XOR(CoL9D10, 1L9D11)
CoL9D11 = OR(3L9D11, 2L9D11)

# RCA LIVELLO 10:

# HALFADDER LIV 10 BIT 0
SL10D0 = XOR(W011, SL9D1)
CoL10D0 = AND(W011, SL9D1)

# FULLADDER LIV 10 BIT 1
1L10D1 = XOR(W111, SL9D2)
2L10D1 = AND(W111, SL9D2)
3L10D1 = AND(1L10D1, CoL10D0)
SL10D1 = XOR(CoL10D0, 1L10D1)
CoL10D1 = OR(3L10D1, 2L10D1)

# FULLADDER LIV 10 BIT 2
1L10D2 = XOR(W211, SL9D3)
2L10D2 = AND(W211, SL9D3)
3L10D2 = AND(1L10D2, CoL10D1)
SL10D2 = XOR(CoL10D1, 1L10D2)
CoL10D2 = OR(3L10D2, 2L10D2)

# FULLADDER LIV 10 BIT 3
1L10D3 = XOR(W311, SL9D4)
2L10D3 = AND(W311, SL9D4)
3L10D3 = AND(1L10D3, CoL10D2)
SL10D3 = XOR(CoL10D2, 1L10D3)
CoL10D3 = OR(3L10D3, 2L10D3)

# FULLADDER LIV 10 BIT 4
1L10D4 = XOR(W411, SL9D5)
2L10D4 = AND(W411, SL9D5)
3L10D4 = AND(1L10D4, CoL10D3)
SL10D4 = XOR(CoL10D3, 1L10D4)
CoL10D4 = OR(3L10D4, 2L10D4)

# FULLADDER LIV 10 BIT 5
1L10D5 = XOR(W511, SL9D6)
2L10D5 = AND(W511, SL9D6)
3L10D5 = AND(1L10D5, CoL10D4)
SL10D5 = XOR(CoL10D4, 1L10D5)
CoL10D5 = OR(3L10D5, 2L10D5)

# FULLADDER LIV 10 BIT 6
1L10D6 = XOR(W611, SL9D7)
2L10D6 = AND(W611, SL9D7)
3L10D6 = AND(1L10D6, CoL10D5)
SL10D6 = XOR(CoL10D5, 1L10D6)
CoL10D6 = OR(3L10D6, 2L10D6)

# FULLADDER LIV 10 BIT 7
1L10D7 = XOR(W711, SL9D8)
2L10D7 = AND(W711, SL9D8)
3L10D7 = AND(1L10D7, CoL10D6)
SL10D7 = XOR(CoL10D6, 1L10D7)
CoL10D7 = OR(3L10D7, 2L10D7)

# FULLADDER LIV 10 BIT 8
1L10D8 = XOR(W811, SL9D9)
2L10D8 = AND(W811, SL9D9)
3L10D8 = AND(1L10D8, CoL10D7)
SL10D8 = XOR(CoL10D7, 1L10D8)
CoL10D8 = OR(3L10D8, 2L10D8)

# FULLADDER LIV 10 BIT 9
1L10D9 = XOR(W911, SL9D10)
2L10D9 = AND(W911, SL9D10)
3L10D9 = AND(1L10D9, CoL10D8)
SL10D9 = XOR(CoL10D8, 1L10D9)
CoL10D9 = OR(3L10D9, 2L10D9)

# FULLADDER LIV 10 BIT 10
1L10D10 = XOR(W1011, SL9D11)
2L10D10 = AND(W1011, SL9D11)
3L10D10 = AND(1L10D10, CoL10D9)
SL10D10 = XOR(CoL10D9, 1L10D10)
CoL10D10 = OR(3L10D10, 2L10D10)

# FULLADDER LIV 10 BIT 11
1L10D11 = XOR(W1111, CoL9D11)
2L10D11 = AND(W1111, CoL9D11)
3L10D11 = AND(1L10D11, CoL10D10)
SL10D11 = XOR(CoL10D10, 1L10D11)
CoL10D11 = OR(3L10D11, 2L10D11)

# 3) Ripple carry adder in cascata al moltiplicatore

# HALFADDER RCA BIT 0
S0 = XOR(W00, R0)
Co0 = AND(W00, R0)

# FULLADDER RCA BIT 1 (Livello precedente)
11 = XOR(SL0D0, R1)
21 = AND(SL0D0, R1)
31 = AND(11, Co0)
S1 = XOR(Co0, 11)
Co1 = OR(31, 21)

# FULLADDER RCA BIT 2 (Livello precedente)
12 = XOR(SL1D0, R2)
22 = AND(SL1D0, R2)
32 = AND(12, Co1)
S2 = XOR(Co1, 12)
Co2 = OR(32, 22)

# FULLADDER RCA BIT 3 (Livello precedente)
13 = XOR(SL2D0, R3)
23 = AND(SL2D0, R3)
33 = AND(13, Co2)
S3 = XOR(Co2, 13)
Co3 = OR(33, 23)

# FULLADDER RCA BIT 4 (Livello precedente)
14 = XOR(SL3D0, R4)
24 = AND(SL3D0, R4)
34 = AND(14, Co3)
S4 = XOR(Co3, 14)
Co4 = OR(34, 24)

# FULLADDER RCA BIT 5 (Livello precedente)
15 = XOR(SL4D0, R5)
25 = AND(SL4D0, R5)
35 = AND(15, Co4)
S5 = XOR(Co4, 15)
Co5 = OR(35, 25)

# FULLADDER RCA BIT 6 (Livello precedente)
16 = XOR(SL5D0, R6)
26 = AND(SL5D0, R6)
36 = AND(16, Co5)
S6 = XOR(Co5, 16)
Co6 = OR(36, 26)

# FULLADDER RCA BIT 7 (Livello precedente)
17 = XOR(SL6D0, R7)
27 = AND(SL6D0, R7)
37 = AND(17, Co6)
S7 = XOR(Co6, 17)
Co7 = OR(37, 27)

# FULLADDER RCA BIT 8 (Livello precedente)
18 = XOR(SL7D0, R8)
28 = AND(SL7D0, R8)
38 = AND(18, Co7)
S8 = XOR(Co7, 18)
Co8 = OR(38, 28)

# FULLADDER RCA BIT 9 (Livello precedente)
19 = XOR(SL8D0, R9)
29 = AND(SL8D0, R9)
39 = AND(19, Co8)
S9 = XOR(Co8, 19)
Co9 = OR(39, 29)

# FULLADDER RCA BIT 10 (Livello precedente)
110 = XOR(SL9D0, R10)
210 = AND(SL9D0, R10)
310 = AND(110, Co9)
S10 = XOR(Co9, 110)
Co10 = OR(310, 210)

# FULLADDER RCA INGRESSO BIT 11 (Ultimo livello)
111 = XOR(SL10D0, R11)
211 = AND(SL10D0, R11)
311 = AND(111, Co10)
S11 = XOR(Co10, 111)
Co11 = OR(311, 211)

# FULLADDER RCA INGRESSO BIT 12 (Ultimo livello)
112 = XOR(SL10D1, R12)
212 = AND(SL10D1, R12)
312 = AND(112, Co11)
S12 = XOR(Co11, 112)
Co12 = OR(312, 212)

# FULLADDER RCA INGRESSO BIT 13 (Ultimo livello)
113 = XOR(SL10D2, R13)
213 = AND(SL10D2, R13)
313 = AND(113, Co12)
S13 = XOR(Co12, 113)
Co13 = OR(313, 213)

# FULLADDER RCA INGRESSO BIT 14 (Ultimo livello)
114 = XOR(SL10D3, R14)
214 = AND(SL10D3, R14)
314 = AND(114, Co13)
S14 = XOR(Co13, 114)
Co14 = OR(314, 214)

# FULLADDER RCA INGRESSO BIT 15 (Ultimo livello)
115 = XOR(SL10D4, R15)
215 = AND(SL10D4, R15)
315 = AND(115, Co14)
S15 = XOR(Co14, 115)
Co15 = OR(315, 215)

# FULLADDER RCA INGRESSO BIT 16 (Ultimo livello)
116 = XOR(SL10D5, R16)
216 = AND(SL10D5, R16)
316 = AND(116, Co15)
S16 = XOR(Co15, 116)
Co16 = OR(316, 216)

# FULLADDER RCA INGRESSO BIT 17 (Ultimo livello)
117 = XOR(SL10D6, R17)
217 = AND(SL10D6, R17)
317 = AND(117, Co16)
S17 = XOR(Co16, 117)
Co17 = OR(317, 217)

# FULLADDER RCA INGRESSO BIT 18 (Ultimo livello)
118 = XOR(SL10D7, R18)
218 = AND(SL10D7, R18)
318 = AND(118, Co17)
S18 = XOR(Co17, 118)
Co18 = OR(318, 218)

# FULLADDER RCA INGRESSO BIT 19 (Ultimo livello)
119 = XOR(SL10D8, R19)
219 = AND(SL10D8, R19)
319 = AND(119, Co18)
S19 = XOR(Co18, 119)
Co19 = OR(319, 219)

# FULLADDER RCA INGRESSO BIT 20 (Ultimo livello)
120 = XOR(SL10D9, R20)
220 = AND(SL10D9, R20)
320 = AND(120, Co19)
S20 = XOR(Co19, 120)
Co20 = OR(320, 220)

# FULLADDER RCA INGRESSO BIT 21 (Ultimo livello)
121 = XOR(SL10D10, R21)
221 = AND(SL10D10, R21)
321 = AND(121, Co20)
S21 = XOR(Co20, 121)
Co21 = OR(321, 221)

# FULLADDER RCA INGRESSO BIT 22 (Ultimo livello)
122 = XOR(SL10D11, R22)
222 = AND(SL10D11, R22)
322 = AND(122, Co21)
S22 = XOR(Co21, 122)
Co22 = OR(322, 222)

# Visto che il carry out sarebbe floating metto un halfadder
# HALFADDER RCA INGRESSO BIT 23
123 = XOR(CoL10D11, R23)
S23 = XOR(Co22, 123)

# 4) Registro R di 24 bit
R0 = DFF(S0)
OUTPUT(R0)
R1 = DFF(S1)
OUTPUT(R1)
R2 = DFF(S2)
OUTPUT(R2)
R3 = DFF(S3)
OUTPUT(R3)
R4 = DFF(S4)
OUTPUT(R4)
R5 = DFF(S5)
OUTPUT(R5)
R6 = DFF(S6)
OUTPUT(R6)
R7 = DFF(S7)
OUTPUT(R7)
R8 = DFF(S8)
OUTPUT(R8)
R9 = DFF(S9)
OUTPUT(R9)
R10 = DFF(S10)
OUTPUT(R10)
R11 = DFF(S11)
OUTPUT(R11)
R12 = DFF(S12)
OUTPUT(R12)
R13 = DFF(S13)
OUTPUT(R13)
R14 = DFF(S14)
OUTPUT(R14)
R15 = DFF(S15)
OUTPUT(R15)
R16 = DFF(S16)
OUTPUT(R16)
R17 = DFF(S17)
OUTPUT(R17)
R18 = DFF(S18)
OUTPUT(R18)
R19 = DFF(S19)
OUTPUT(R19)
R20 = DFF(S20)
OUTPUT(R20)
R21 = DFF(S21)
OUTPUT(R21)
R22 = DFF(S22)
OUTPUT(R22)
R23 = DFF(S23)
OUTPUT(R23)