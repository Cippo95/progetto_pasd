# multiply_and_accumulate_unit

# Input

INPUT(X3)
INPUT(X2)
INPUT(X1)
INPUT(X0)
INPUT(Y3)
INPUT(Y2)
INPUT(Y1)
INPUT(Y0)

# 1) Prima parte del moltiplicatore: AND che generano i segnali W

W_X0Y0 = AND(X0, Y0)
W_X1Y0 = AND(X1, Y0)
W_X2Y0 = AND(X2, Y0)
W_X3Y0 = AND(X3, Y0)
W_X0Y1 = AND(X0, Y1)
W_X1Y1 = AND(X1, Y1)
W_X2Y1 = AND(X2, Y1)
W_X3Y1 = AND(X3, Y1)
W_X0Y2 = AND(X0, Y2)
W_X1Y2 = AND(X1, Y2)
W_X2Y2 = AND(X2, Y2)
W_X3Y2 = AND(X3, Y2)
W_X0Y3 = AND(X0, Y3)
W_X1Y3 = AND(X1, Y3)
W_X2Y3 = AND(X2, Y3)
W_X3Y3 = AND(X3, Y3)

# 2) Seconda parte del moltiplicatore: cascata di rca shiftati

# RCA LIVELLO 0:

# HALFADDER LIV 0 BIT 0
SL0D0 = XOR(W_X0Y1, W_X1Y0)
CoL0D0 = AND(W_X0Y1, W_X1Y0)

# FULLADDER LIV 0 BIT 1
1L0D1 = XOR(W_X1Y1, W_X2Y0)
2L0D1 = AND(W_X1Y1, W_X2Y0)
3L0D1 = AND(1L0D1, CoL0D0)
SL0D1 = XOR(CoL0D0, 1L0D1)
CoL0D1 = OR(3L0D1, 2L0D1)

# FULLADDER LIV 0 BIT 2
1L0D2 = XOR(W_X2Y1, W_X3Y0)
2L0D2 = AND(W_X2Y1, W_X3Y0)
3L0D2 = AND(1L0D2, CoL0D1)
SL0D2 = XOR(CoL0D1, 1L0D2)
CoL0D2 = OR(3L0D2, 2L0D2)

# Al livello 0 l'ultimo fulladder avrebbe ingresso 0 quindi metto un halfadder
# HALFADDER LIV 0 BIT 3
CoL0D3 = AND(W_X3Y1, CoL0D2)
SL0D3 = XOR(CoL0D2, W_X3Y1)

# RCA LIVELLO 1:

# HALFADDER LIV 1 BIT 0
SL1D0 = XOR(W_X0Y2, SL0D1)
CoL1D0 = AND(W_X0Y2, SL0D1)

# FULLADDER LIV 1 BIT 1
1L1D1 = XOR(W_X1Y2, SL0D2)
2L1D1 = AND(W_X1Y2, SL0D2)
3L1D1 = AND(1L1D1, CoL1D0)
SL1D1 = XOR(CoL1D0, 1L1D1)
CoL1D1 = OR(3L1D1, 2L1D1)

# FULLADDER LIV 1 BIT 2
1L1D2 = XOR(W_X2Y2, SL0D3)
2L1D2 = AND(W_X2Y2, SL0D3)
3L1D2 = AND(1L1D2, CoL1D1)
SL1D2 = XOR(CoL1D1, 1L1D2)
CoL1D2 = OR(3L1D2, 2L1D2)

# FULLADDER LIV 1 BIT 3
1L1D3 = XOR(W_X3Y2, CoL0D3)
2L1D3 = AND(W_X3Y2, CoL0D3)
3L1D3 = AND(1L1D3, CoL1D2)
SL1D3 = XOR(CoL1D2, 1L1D3)
CoL1D3 = OR(3L1D3, 2L1D3)

# RCA LIVELLO 2:

# HALFADDER LIV 2 BIT 0
SL2D0 = XOR(W_X0Y3, SL1D1)
CoL2D0 = AND(W_X0Y3, SL1D1)

# FULLADDER LIV 2 BIT 1
1L2D1 = XOR(W_X1Y3, SL1D2)
2L2D1 = AND(W_X1Y3, SL1D2)
3L2D1 = AND(1L2D1, CoL2D0)
SL2D1 = XOR(CoL2D0, 1L2D1)
CoL2D1 = OR(3L2D1, 2L2D1)

# FULLADDER LIV 2 BIT 2
1L2D2 = XOR(W_X2Y3, SL1D3)
2L2D2 = AND(W_X2Y3, SL1D3)
3L2D2 = AND(1L2D2, CoL2D1)
SL2D2 = XOR(CoL2D1, 1L2D2)
CoL2D2 = OR(3L2D2, 2L2D2)

# FULLADDER LIV 2 BIT 3
1L2D3 = XOR(W_X3Y3, CoL1D3)
2L2D3 = AND(W_X3Y3, CoL1D3)
3L2D3 = AND(1L2D3, CoL2D2)
SL2D3 = XOR(CoL2D2, 1L2D3)
CoL2D3 = OR(3L2D3, 2L2D3)

# 3) Ripple carry adder in cascata al moltiplicatore

# HALFADDER RCA BIT 0
S0 = XOR(W_X0Y0, R0)
Co0 = AND(W_X0Y0, R0)

# FULLADDER RCA BIT 1 (Livello precedente)
11 = XOR(SL0D0, R1)
21 = AND(SL0D0, R1)
31 = AND(11, Co0)
S1 = XOR(Co0, 11)
Co1 = OR(31, 21)

# FULLADDER RCA BIT 2 (Livello precedente)
12 = XOR(SL1D0, R2)
22 = AND(SL1D0, R2)
32 = AND(12, Co1)
S2 = XOR(Co1, 12)
Co2 = OR(32, 22)

# FULLADDER RCA INGRESSO BIT 3 (Ultimo livello)
13 = XOR(SL2D0, R3)
23 = AND(SL2D0, R3)
33 = AND(13, Co2)
S3 = XOR(Co2, 13)
Co3 = OR(33, 23)

# FULLADDER RCA INGRESSO BIT 4 (Ultimo livello)
14 = XOR(SL2D1, R4)
24 = AND(SL2D1, R4)
34 = AND(14, Co3)
S4 = XOR(Co3, 14)
Co4 = OR(34, 24)

# FULLADDER RCA INGRESSO BIT 5 (Ultimo livello)
15 = XOR(SL2D2, R5)
25 = AND(SL2D2, R5)
35 = AND(15, Co4)
S5 = XOR(Co4, 15)
Co5 = OR(35, 25)

# FULLADDER RCA INGRESSO BIT 6 (Ultimo livello)
16 = XOR(SL2D3, R6)
26 = AND(SL2D3, R6)
36 = AND(16, Co5)
S6 = XOR(Co5, 16)
Co6 = OR(36, 26)

# Visto che il carry out sarebbe floating metto un halfadder
# HALFADDER RCA INGRESSO BIT 7
17 = XOR(CoL2D3, R7)
S7 = XOR(Co6, 17)

# 4) Registro R di 8 bit
R0 = DFF(S0)
OUTPUT(R7)
R1 = DFF(S1)
OUTPUT(R6)
R2 = DFF(S2)
OUTPUT(R5)
R3 = DFF(S3)
OUTPUT(R4)
R4 = DFF(S4)
OUTPUT(R3)
R5 = DFF(S5)
OUTPUT(R2)
R6 = DFF(S6)
OUTPUT(R1)
R7 = DFF(S7)
OUTPUT(R0)