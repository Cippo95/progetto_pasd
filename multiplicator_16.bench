# multiplicator

# Input

INPUT(X0)
INPUT(Y0)
INPUT(X1)
INPUT(Y1)
INPUT(X2)
INPUT(Y2)
INPUT(X3)
INPUT(Y3)
INPUT(X4)
INPUT(Y4)
INPUT(X5)
INPUT(Y5)
INPUT(X6)
INPUT(Y6)
INPUT(X7)
INPUT(Y7)
INPUT(X8)
INPUT(Y8)
INPUT(X9)
INPUT(Y9)
INPUT(X10)
INPUT(Y10)
INPUT(X11)
INPUT(Y11)
INPUT(X12)
INPUT(Y12)
INPUT(X13)
INPUT(Y13)
INPUT(X14)
INPUT(Y14)
INPUT(X15)
INPUT(Y15)

# 1) Prima parte del moltiplicatore: AND che generano i segnali W

W_X0Y0 = AND(X0, Y0)
W_X1Y0 = AND(X1, Y0)
W_X2Y0 = AND(X2, Y0)
W_X3Y0 = AND(X3, Y0)
W_X4Y0 = AND(X4, Y0)
W_X5Y0 = AND(X5, Y0)
W_X6Y0 = AND(X6, Y0)
W_X7Y0 = AND(X7, Y0)
W_X8Y0 = AND(X8, Y0)
W_X9Y0 = AND(X9, Y0)
W_X10Y0 = AND(X10, Y0)
W_X11Y0 = AND(X11, Y0)
W_X12Y0 = AND(X12, Y0)
W_X13Y0 = AND(X13, Y0)
W_X14Y0 = AND(X14, Y0)
W_X15Y0 = AND(X15, Y0)
W_X0Y1 = AND(X0, Y1)
W_X1Y1 = AND(X1, Y1)
W_X2Y1 = AND(X2, Y1)
W_X3Y1 = AND(X3, Y1)
W_X4Y1 = AND(X4, Y1)
W_X5Y1 = AND(X5, Y1)
W_X6Y1 = AND(X6, Y1)
W_X7Y1 = AND(X7, Y1)
W_X8Y1 = AND(X8, Y1)
W_X9Y1 = AND(X9, Y1)
W_X10Y1 = AND(X10, Y1)
W_X11Y1 = AND(X11, Y1)
W_X12Y1 = AND(X12, Y1)
W_X13Y1 = AND(X13, Y1)
W_X14Y1 = AND(X14, Y1)
W_X15Y1 = AND(X15, Y1)
W_X0Y2 = AND(X0, Y2)
W_X1Y2 = AND(X1, Y2)
W_X2Y2 = AND(X2, Y2)
W_X3Y2 = AND(X3, Y2)
W_X4Y2 = AND(X4, Y2)
W_X5Y2 = AND(X5, Y2)
W_X6Y2 = AND(X6, Y2)
W_X7Y2 = AND(X7, Y2)
W_X8Y2 = AND(X8, Y2)
W_X9Y2 = AND(X9, Y2)
W_X10Y2 = AND(X10, Y2)
W_X11Y2 = AND(X11, Y2)
W_X12Y2 = AND(X12, Y2)
W_X13Y2 = AND(X13, Y2)
W_X14Y2 = AND(X14, Y2)
W_X15Y2 = AND(X15, Y2)
W_X0Y3 = AND(X0, Y3)
W_X1Y3 = AND(X1, Y3)
W_X2Y3 = AND(X2, Y3)
W_X3Y3 = AND(X3, Y3)
W_X4Y3 = AND(X4, Y3)
W_X5Y3 = AND(X5, Y3)
W_X6Y3 = AND(X6, Y3)
W_X7Y3 = AND(X7, Y3)
W_X8Y3 = AND(X8, Y3)
W_X9Y3 = AND(X9, Y3)
W_X10Y3 = AND(X10, Y3)
W_X11Y3 = AND(X11, Y3)
W_X12Y3 = AND(X12, Y3)
W_X13Y3 = AND(X13, Y3)
W_X14Y3 = AND(X14, Y3)
W_X15Y3 = AND(X15, Y3)
W_X0Y4 = AND(X0, Y4)
W_X1Y4 = AND(X1, Y4)
W_X2Y4 = AND(X2, Y4)
W_X3Y4 = AND(X3, Y4)
W_X4Y4 = AND(X4, Y4)
W_X5Y4 = AND(X5, Y4)
W_X6Y4 = AND(X6, Y4)
W_X7Y4 = AND(X7, Y4)
W_X8Y4 = AND(X8, Y4)
W_X9Y4 = AND(X9, Y4)
W_X10Y4 = AND(X10, Y4)
W_X11Y4 = AND(X11, Y4)
W_X12Y4 = AND(X12, Y4)
W_X13Y4 = AND(X13, Y4)
W_X14Y4 = AND(X14, Y4)
W_X15Y4 = AND(X15, Y4)
W_X0Y5 = AND(X0, Y5)
W_X1Y5 = AND(X1, Y5)
W_X2Y5 = AND(X2, Y5)
W_X3Y5 = AND(X3, Y5)
W_X4Y5 = AND(X4, Y5)
W_X5Y5 = AND(X5, Y5)
W_X6Y5 = AND(X6, Y5)
W_X7Y5 = AND(X7, Y5)
W_X8Y5 = AND(X8, Y5)
W_X9Y5 = AND(X9, Y5)
W_X10Y5 = AND(X10, Y5)
W_X11Y5 = AND(X11, Y5)
W_X12Y5 = AND(X12, Y5)
W_X13Y5 = AND(X13, Y5)
W_X14Y5 = AND(X14, Y5)
W_X15Y5 = AND(X15, Y5)
W_X0Y6 = AND(X0, Y6)
W_X1Y6 = AND(X1, Y6)
W_X2Y6 = AND(X2, Y6)
W_X3Y6 = AND(X3, Y6)
W_X4Y6 = AND(X4, Y6)
W_X5Y6 = AND(X5, Y6)
W_X6Y6 = AND(X6, Y6)
W_X7Y6 = AND(X7, Y6)
W_X8Y6 = AND(X8, Y6)
W_X9Y6 = AND(X9, Y6)
W_X10Y6 = AND(X10, Y6)
W_X11Y6 = AND(X11, Y6)
W_X12Y6 = AND(X12, Y6)
W_X13Y6 = AND(X13, Y6)
W_X14Y6 = AND(X14, Y6)
W_X15Y6 = AND(X15, Y6)
W_X0Y7 = AND(X0, Y7)
W_X1Y7 = AND(X1, Y7)
W_X2Y7 = AND(X2, Y7)
W_X3Y7 = AND(X3, Y7)
W_X4Y7 = AND(X4, Y7)
W_X5Y7 = AND(X5, Y7)
W_X6Y7 = AND(X6, Y7)
W_X7Y7 = AND(X7, Y7)
W_X8Y7 = AND(X8, Y7)
W_X9Y7 = AND(X9, Y7)
W_X10Y7 = AND(X10, Y7)
W_X11Y7 = AND(X11, Y7)
W_X12Y7 = AND(X12, Y7)
W_X13Y7 = AND(X13, Y7)
W_X14Y7 = AND(X14, Y7)
W_X15Y7 = AND(X15, Y7)
W_X0Y8 = AND(X0, Y8)
W_X1Y8 = AND(X1, Y8)
W_X2Y8 = AND(X2, Y8)
W_X3Y8 = AND(X3, Y8)
W_X4Y8 = AND(X4, Y8)
W_X5Y8 = AND(X5, Y8)
W_X6Y8 = AND(X6, Y8)
W_X7Y8 = AND(X7, Y8)
W_X8Y8 = AND(X8, Y8)
W_X9Y8 = AND(X9, Y8)
W_X10Y8 = AND(X10, Y8)
W_X11Y8 = AND(X11, Y8)
W_X12Y8 = AND(X12, Y8)
W_X13Y8 = AND(X13, Y8)
W_X14Y8 = AND(X14, Y8)
W_X15Y8 = AND(X15, Y8)
W_X0Y9 = AND(X0, Y9)
W_X1Y9 = AND(X1, Y9)
W_X2Y9 = AND(X2, Y9)
W_X3Y9 = AND(X3, Y9)
W_X4Y9 = AND(X4, Y9)
W_X5Y9 = AND(X5, Y9)
W_X6Y9 = AND(X6, Y9)
W_X7Y9 = AND(X7, Y9)
W_X8Y9 = AND(X8, Y9)
W_X9Y9 = AND(X9, Y9)
W_X10Y9 = AND(X10, Y9)
W_X11Y9 = AND(X11, Y9)
W_X12Y9 = AND(X12, Y9)
W_X13Y9 = AND(X13, Y9)
W_X14Y9 = AND(X14, Y9)
W_X15Y9 = AND(X15, Y9)
W_X0Y10 = AND(X0, Y10)
W_X1Y10 = AND(X1, Y10)
W_X2Y10 = AND(X2, Y10)
W_X3Y10 = AND(X3, Y10)
W_X4Y10 = AND(X4, Y10)
W_X5Y10 = AND(X5, Y10)
W_X6Y10 = AND(X6, Y10)
W_X7Y10 = AND(X7, Y10)
W_X8Y10 = AND(X8, Y10)
W_X9Y10 = AND(X9, Y10)
W_X10Y10 = AND(X10, Y10)
W_X11Y10 = AND(X11, Y10)
W_X12Y10 = AND(X12, Y10)
W_X13Y10 = AND(X13, Y10)
W_X14Y10 = AND(X14, Y10)
W_X15Y10 = AND(X15, Y10)
W_X0Y11 = AND(X0, Y11)
W_X1Y11 = AND(X1, Y11)
W_X2Y11 = AND(X2, Y11)
W_X3Y11 = AND(X3, Y11)
W_X4Y11 = AND(X4, Y11)
W_X5Y11 = AND(X5, Y11)
W_X6Y11 = AND(X6, Y11)
W_X7Y11 = AND(X7, Y11)
W_X8Y11 = AND(X8, Y11)
W_X9Y11 = AND(X9, Y11)
W_X10Y11 = AND(X10, Y11)
W_X11Y11 = AND(X11, Y11)
W_X12Y11 = AND(X12, Y11)
W_X13Y11 = AND(X13, Y11)
W_X14Y11 = AND(X14, Y11)
W_X15Y11 = AND(X15, Y11)
W_X0Y12 = AND(X0, Y12)
W_X1Y12 = AND(X1, Y12)
W_X2Y12 = AND(X2, Y12)
W_X3Y12 = AND(X3, Y12)
W_X4Y12 = AND(X4, Y12)
W_X5Y12 = AND(X5, Y12)
W_X6Y12 = AND(X6, Y12)
W_X7Y12 = AND(X7, Y12)
W_X8Y12 = AND(X8, Y12)
W_X9Y12 = AND(X9, Y12)
W_X10Y12 = AND(X10, Y12)
W_X11Y12 = AND(X11, Y12)
W_X12Y12 = AND(X12, Y12)
W_X13Y12 = AND(X13, Y12)
W_X14Y12 = AND(X14, Y12)
W_X15Y12 = AND(X15, Y12)
W_X0Y13 = AND(X0, Y13)
W_X1Y13 = AND(X1, Y13)
W_X2Y13 = AND(X2, Y13)
W_X3Y13 = AND(X3, Y13)
W_X4Y13 = AND(X4, Y13)
W_X5Y13 = AND(X5, Y13)
W_X6Y13 = AND(X6, Y13)
W_X7Y13 = AND(X7, Y13)
W_X8Y13 = AND(X8, Y13)
W_X9Y13 = AND(X9, Y13)
W_X10Y13 = AND(X10, Y13)
W_X11Y13 = AND(X11, Y13)
W_X12Y13 = AND(X12, Y13)
W_X13Y13 = AND(X13, Y13)
W_X14Y13 = AND(X14, Y13)
W_X15Y13 = AND(X15, Y13)
W_X0Y14 = AND(X0, Y14)
W_X1Y14 = AND(X1, Y14)
W_X2Y14 = AND(X2, Y14)
W_X3Y14 = AND(X3, Y14)
W_X4Y14 = AND(X4, Y14)
W_X5Y14 = AND(X5, Y14)
W_X6Y14 = AND(X6, Y14)
W_X7Y14 = AND(X7, Y14)
W_X8Y14 = AND(X8, Y14)
W_X9Y14 = AND(X9, Y14)
W_X10Y14 = AND(X10, Y14)
W_X11Y14 = AND(X11, Y14)
W_X12Y14 = AND(X12, Y14)
W_X13Y14 = AND(X13, Y14)
W_X14Y14 = AND(X14, Y14)
W_X15Y14 = AND(X15, Y14)
W_X0Y15 = AND(X0, Y15)
W_X1Y15 = AND(X1, Y15)
W_X2Y15 = AND(X2, Y15)
W_X3Y15 = AND(X3, Y15)
W_X4Y15 = AND(X4, Y15)
W_X5Y15 = AND(X5, Y15)
W_X6Y15 = AND(X6, Y15)
W_X7Y15 = AND(X7, Y15)
W_X8Y15 = AND(X8, Y15)
W_X9Y15 = AND(X9, Y15)
W_X10Y15 = AND(X10, Y15)
W_X11Y15 = AND(X11, Y15)
W_X12Y15 = AND(X12, Y15)
W_X13Y15 = AND(X13, Y15)
W_X14Y15 = AND(X14, Y15)
W_X15Y15 = AND(X15, Y15)

# 2) Seconda parte del moltiplicatore: cascata di rca shiftati

# RCA LIVELLO 0:

# HALFADDER LIV 0 BIT 0
SL0D0 = XOR(W_X0Y1, W_X1Y0)
CoL0D0 = AND(W_X0Y1, W_X1Y0)

# FULLADDER LIV 0 BIT 1
1L0D1 = XOR(W_X1Y1, W_X2Y0)
2L0D1 = AND(W_X1Y1, W_X2Y0)
3L0D1 = AND(1L0D1, CoL0D0)
SL0D1 = XOR(CoL0D0, 1L0D1)
CoL0D1 = OR(3L0D1, 2L0D1)

# FULLADDER LIV 0 BIT 2
1L0D2 = XOR(W_X2Y1, W_X3Y0)
2L0D2 = AND(W_X2Y1, W_X3Y0)
3L0D2 = AND(1L0D2, CoL0D1)
SL0D2 = XOR(CoL0D1, 1L0D2)
CoL0D2 = OR(3L0D2, 2L0D2)

# FULLADDER LIV 0 BIT 3
1L0D3 = XOR(W_X3Y1, W_X4Y0)
2L0D3 = AND(W_X3Y1, W_X4Y0)
3L0D3 = AND(1L0D3, CoL0D2)
SL0D3 = XOR(CoL0D2, 1L0D3)
CoL0D3 = OR(3L0D3, 2L0D3)

# FULLADDER LIV 0 BIT 4
1L0D4 = XOR(W_X4Y1, W_X5Y0)
2L0D4 = AND(W_X4Y1, W_X5Y0)
3L0D4 = AND(1L0D4, CoL0D3)
SL0D4 = XOR(CoL0D3, 1L0D4)
CoL0D4 = OR(3L0D4, 2L0D4)

# FULLADDER LIV 0 BIT 5
1L0D5 = XOR(W_X5Y1, W_X6Y0)
2L0D5 = AND(W_X5Y1, W_X6Y0)
3L0D5 = AND(1L0D5, CoL0D4)
SL0D5 = XOR(CoL0D4, 1L0D5)
CoL0D5 = OR(3L0D5, 2L0D5)

# FULLADDER LIV 0 BIT 6
1L0D6 = XOR(W_X6Y1, W_X7Y0)
2L0D6 = AND(W_X6Y1, W_X7Y0)
3L0D6 = AND(1L0D6, CoL0D5)
SL0D6 = XOR(CoL0D5, 1L0D6)
CoL0D6 = OR(3L0D6, 2L0D6)

# FULLADDER LIV 0 BIT 7
1L0D7 = XOR(W_X7Y1, W_X8Y0)
2L0D7 = AND(W_X7Y1, W_X8Y0)
3L0D7 = AND(1L0D7, CoL0D6)
SL0D7 = XOR(CoL0D6, 1L0D7)
CoL0D7 = OR(3L0D7, 2L0D7)

# FULLADDER LIV 0 BIT 8
1L0D8 = XOR(W_X8Y1, W_X9Y0)
2L0D8 = AND(W_X8Y1, W_X9Y0)
3L0D8 = AND(1L0D8, CoL0D7)
SL0D8 = XOR(CoL0D7, 1L0D8)
CoL0D8 = OR(3L0D8, 2L0D8)

# FULLADDER LIV 0 BIT 9
1L0D9 = XOR(W_X9Y1, W_X10Y0)
2L0D9 = AND(W_X9Y1, W_X10Y0)
3L0D9 = AND(1L0D9, CoL0D8)
SL0D9 = XOR(CoL0D8, 1L0D9)
CoL0D9 = OR(3L0D9, 2L0D9)

# FULLADDER LIV 0 BIT 10
1L0D10 = XOR(W_X10Y1, W_X11Y0)
2L0D10 = AND(W_X10Y1, W_X11Y0)
3L0D10 = AND(1L0D10, CoL0D9)
SL0D10 = XOR(CoL0D9, 1L0D10)
CoL0D10 = OR(3L0D10, 2L0D10)

# FULLADDER LIV 0 BIT 11
1L0D11 = XOR(W_X11Y1, W_X12Y0)
2L0D11 = AND(W_X11Y1, W_X12Y0)
3L0D11 = AND(1L0D11, CoL0D10)
SL0D11 = XOR(CoL0D10, 1L0D11)
CoL0D11 = OR(3L0D11, 2L0D11)

# FULLADDER LIV 0 BIT 12
1L0D12 = XOR(W_X12Y1, W_X13Y0)
2L0D12 = AND(W_X12Y1, W_X13Y0)
3L0D12 = AND(1L0D12, CoL0D11)
SL0D12 = XOR(CoL0D11, 1L0D12)
CoL0D12 = OR(3L0D12, 2L0D12)

# FULLADDER LIV 0 BIT 13
1L0D13 = XOR(W_X13Y1, W_X14Y0)
2L0D13 = AND(W_X13Y1, W_X14Y0)
3L0D13 = AND(1L0D13, CoL0D12)
SL0D13 = XOR(CoL0D12, 1L0D13)
CoL0D13 = OR(3L0D13, 2L0D13)

# FULLADDER LIV 0 BIT 14
1L0D14 = XOR(W_X14Y1, W_X15Y0)
2L0D14 = AND(W_X14Y1, W_X15Y0)
3L0D14 = AND(1L0D14, CoL0D13)
SL0D14 = XOR(CoL0D13, 1L0D14)
CoL0D14 = OR(3L0D14, 2L0D14)

# Al livello 0 l'ultimo fulladder avrebbe ingresso 0 quindi metto un halfadder
# HALFADDER LIV 0 BIT 15
CoL0D15 = AND(W_X15Y1, CoL0D14)
SL0D15 = XOR(CoL0D14, W_X15Y1)

# RCA LIVELLO 1:

# HALFADDER LIV 1 BIT 0
SL1D0 = XOR(W_X0Y2, SL0D1)
CoL1D0 = AND(W_X0Y2, SL0D1)

# FULLADDER LIV 1 BIT 1
1L1D1 = XOR(W_X1Y2, SL0D2)
2L1D1 = AND(W_X1Y2, SL0D2)
3L1D1 = AND(1L1D1, CoL1D0)
SL1D1 = XOR(CoL1D0, 1L1D1)
CoL1D1 = OR(3L1D1, 2L1D1)

# FULLADDER LIV 1 BIT 2
1L1D2 = XOR(W_X2Y2, SL0D3)
2L1D2 = AND(W_X2Y2, SL0D3)
3L1D2 = AND(1L1D2, CoL1D1)
SL1D2 = XOR(CoL1D1, 1L1D2)
CoL1D2 = OR(3L1D2, 2L1D2)

# FULLADDER LIV 1 BIT 3
1L1D3 = XOR(W_X3Y2, SL0D4)
2L1D3 = AND(W_X3Y2, SL0D4)
3L1D3 = AND(1L1D3, CoL1D2)
SL1D3 = XOR(CoL1D2, 1L1D3)
CoL1D3 = OR(3L1D3, 2L1D3)

# FULLADDER LIV 1 BIT 4
1L1D4 = XOR(W_X4Y2, SL0D5)
2L1D4 = AND(W_X4Y2, SL0D5)
3L1D4 = AND(1L1D4, CoL1D3)
SL1D4 = XOR(CoL1D3, 1L1D4)
CoL1D4 = OR(3L1D4, 2L1D4)

# FULLADDER LIV 1 BIT 5
1L1D5 = XOR(W_X5Y2, SL0D6)
2L1D5 = AND(W_X5Y2, SL0D6)
3L1D5 = AND(1L1D5, CoL1D4)
SL1D5 = XOR(CoL1D4, 1L1D5)
CoL1D5 = OR(3L1D5, 2L1D5)

# FULLADDER LIV 1 BIT 6
1L1D6 = XOR(W_X6Y2, SL0D7)
2L1D6 = AND(W_X6Y2, SL0D7)
3L1D6 = AND(1L1D6, CoL1D5)
SL1D6 = XOR(CoL1D5, 1L1D6)
CoL1D6 = OR(3L1D6, 2L1D6)

# FULLADDER LIV 1 BIT 7
1L1D7 = XOR(W_X7Y2, SL0D8)
2L1D7 = AND(W_X7Y2, SL0D8)
3L1D7 = AND(1L1D7, CoL1D6)
SL1D7 = XOR(CoL1D6, 1L1D7)
CoL1D7 = OR(3L1D7, 2L1D7)

# FULLADDER LIV 1 BIT 8
1L1D8 = XOR(W_X8Y2, SL0D9)
2L1D8 = AND(W_X8Y2, SL0D9)
3L1D8 = AND(1L1D8, CoL1D7)
SL1D8 = XOR(CoL1D7, 1L1D8)
CoL1D8 = OR(3L1D8, 2L1D8)

# FULLADDER LIV 1 BIT 9
1L1D9 = XOR(W_X9Y2, SL0D10)
2L1D9 = AND(W_X9Y2, SL0D10)
3L1D9 = AND(1L1D9, CoL1D8)
SL1D9 = XOR(CoL1D8, 1L1D9)
CoL1D9 = OR(3L1D9, 2L1D9)

# FULLADDER LIV 1 BIT 10
1L1D10 = XOR(W_X10Y2, SL0D11)
2L1D10 = AND(W_X10Y2, SL0D11)
3L1D10 = AND(1L1D10, CoL1D9)
SL1D10 = XOR(CoL1D9, 1L1D10)
CoL1D10 = OR(3L1D10, 2L1D10)

# FULLADDER LIV 1 BIT 11
1L1D11 = XOR(W_X11Y2, SL0D12)
2L1D11 = AND(W_X11Y2, SL0D12)
3L1D11 = AND(1L1D11, CoL1D10)
SL1D11 = XOR(CoL1D10, 1L1D11)
CoL1D11 = OR(3L1D11, 2L1D11)

# FULLADDER LIV 1 BIT 12
1L1D12 = XOR(W_X12Y2, SL0D13)
2L1D12 = AND(W_X12Y2, SL0D13)
3L1D12 = AND(1L1D12, CoL1D11)
SL1D12 = XOR(CoL1D11, 1L1D12)
CoL1D12 = OR(3L1D12, 2L1D12)

# FULLADDER LIV 1 BIT 13
1L1D13 = XOR(W_X13Y2, SL0D14)
2L1D13 = AND(W_X13Y2, SL0D14)
3L1D13 = AND(1L1D13, CoL1D12)
SL1D13 = XOR(CoL1D12, 1L1D13)
CoL1D13 = OR(3L1D13, 2L1D13)

# FULLADDER LIV 1 BIT 14
1L1D14 = XOR(W_X14Y2, SL0D15)
2L1D14 = AND(W_X14Y2, SL0D15)
3L1D14 = AND(1L1D14, CoL1D13)
SL1D14 = XOR(CoL1D13, 1L1D14)
CoL1D14 = OR(3L1D14, 2L1D14)

# FULLADDER LIV 1 BIT 15
1L1D15 = XOR(W_X15Y2, CoL0D15)
2L1D15 = AND(W_X15Y2, CoL0D15)
3L1D15 = AND(1L1D15, CoL1D14)
SL1D15 = XOR(CoL1D14, 1L1D15)
CoL1D15 = OR(3L1D15, 2L1D15)

# RCA LIVELLO 2:

# HALFADDER LIV 2 BIT 0
SL2D0 = XOR(W_X0Y3, SL1D1)
CoL2D0 = AND(W_X0Y3, SL1D1)

# FULLADDER LIV 2 BIT 1
1L2D1 = XOR(W_X1Y3, SL1D2)
2L2D1 = AND(W_X1Y3, SL1D2)
3L2D1 = AND(1L2D1, CoL2D0)
SL2D1 = XOR(CoL2D0, 1L2D1)
CoL2D1 = OR(3L2D1, 2L2D1)

# FULLADDER LIV 2 BIT 2
1L2D2 = XOR(W_X2Y3, SL1D3)
2L2D2 = AND(W_X2Y3, SL1D3)
3L2D2 = AND(1L2D2, CoL2D1)
SL2D2 = XOR(CoL2D1, 1L2D2)
CoL2D2 = OR(3L2D2, 2L2D2)

# FULLADDER LIV 2 BIT 3
1L2D3 = XOR(W_X3Y3, SL1D4)
2L2D3 = AND(W_X3Y3, SL1D4)
3L2D3 = AND(1L2D3, CoL2D2)
SL2D3 = XOR(CoL2D2, 1L2D3)
CoL2D3 = OR(3L2D3, 2L2D3)

# FULLADDER LIV 2 BIT 4
1L2D4 = XOR(W_X4Y3, SL1D5)
2L2D4 = AND(W_X4Y3, SL1D5)
3L2D4 = AND(1L2D4, CoL2D3)
SL2D4 = XOR(CoL2D3, 1L2D4)
CoL2D4 = OR(3L2D4, 2L2D4)

# FULLADDER LIV 2 BIT 5
1L2D5 = XOR(W_X5Y3, SL1D6)
2L2D5 = AND(W_X5Y3, SL1D6)
3L2D5 = AND(1L2D5, CoL2D4)
SL2D5 = XOR(CoL2D4, 1L2D5)
CoL2D5 = OR(3L2D5, 2L2D5)

# FULLADDER LIV 2 BIT 6
1L2D6 = XOR(W_X6Y3, SL1D7)
2L2D6 = AND(W_X6Y3, SL1D7)
3L2D6 = AND(1L2D6, CoL2D5)
SL2D6 = XOR(CoL2D5, 1L2D6)
CoL2D6 = OR(3L2D6, 2L2D6)

# FULLADDER LIV 2 BIT 7
1L2D7 = XOR(W_X7Y3, SL1D8)
2L2D7 = AND(W_X7Y3, SL1D8)
3L2D7 = AND(1L2D7, CoL2D6)
SL2D7 = XOR(CoL2D6, 1L2D7)
CoL2D7 = OR(3L2D7, 2L2D7)

# FULLADDER LIV 2 BIT 8
1L2D8 = XOR(W_X8Y3, SL1D9)
2L2D8 = AND(W_X8Y3, SL1D9)
3L2D8 = AND(1L2D8, CoL2D7)
SL2D8 = XOR(CoL2D7, 1L2D8)
CoL2D8 = OR(3L2D8, 2L2D8)

# FULLADDER LIV 2 BIT 9
1L2D9 = XOR(W_X9Y3, SL1D10)
2L2D9 = AND(W_X9Y3, SL1D10)
3L2D9 = AND(1L2D9, CoL2D8)
SL2D9 = XOR(CoL2D8, 1L2D9)
CoL2D9 = OR(3L2D9, 2L2D9)

# FULLADDER LIV 2 BIT 10
1L2D10 = XOR(W_X10Y3, SL1D11)
2L2D10 = AND(W_X10Y3, SL1D11)
3L2D10 = AND(1L2D10, CoL2D9)
SL2D10 = XOR(CoL2D9, 1L2D10)
CoL2D10 = OR(3L2D10, 2L2D10)

# FULLADDER LIV 2 BIT 11
1L2D11 = XOR(W_X11Y3, SL1D12)
2L2D11 = AND(W_X11Y3, SL1D12)
3L2D11 = AND(1L2D11, CoL2D10)
SL2D11 = XOR(CoL2D10, 1L2D11)
CoL2D11 = OR(3L2D11, 2L2D11)

# FULLADDER LIV 2 BIT 12
1L2D12 = XOR(W_X12Y3, SL1D13)
2L2D12 = AND(W_X12Y3, SL1D13)
3L2D12 = AND(1L2D12, CoL2D11)
SL2D12 = XOR(CoL2D11, 1L2D12)
CoL2D12 = OR(3L2D12, 2L2D12)

# FULLADDER LIV 2 BIT 13
1L2D13 = XOR(W_X13Y3, SL1D14)
2L2D13 = AND(W_X13Y3, SL1D14)
3L2D13 = AND(1L2D13, CoL2D12)
SL2D13 = XOR(CoL2D12, 1L2D13)
CoL2D13 = OR(3L2D13, 2L2D13)

# FULLADDER LIV 2 BIT 14
1L2D14 = XOR(W_X14Y3, SL1D15)
2L2D14 = AND(W_X14Y3, SL1D15)
3L2D14 = AND(1L2D14, CoL2D13)
SL2D14 = XOR(CoL2D13, 1L2D14)
CoL2D14 = OR(3L2D14, 2L2D14)

# FULLADDER LIV 2 BIT 15
1L2D15 = XOR(W_X15Y3, CoL1D15)
2L2D15 = AND(W_X15Y3, CoL1D15)
3L2D15 = AND(1L2D15, CoL2D14)
SL2D15 = XOR(CoL2D14, 1L2D15)
CoL2D15 = OR(3L2D15, 2L2D15)

# RCA LIVELLO 3:

# HALFADDER LIV 3 BIT 0
SL3D0 = XOR(W_X0Y4, SL2D1)
CoL3D0 = AND(W_X0Y4, SL2D1)

# FULLADDER LIV 3 BIT 1
1L3D1 = XOR(W_X1Y4, SL2D2)
2L3D1 = AND(W_X1Y4, SL2D2)
3L3D1 = AND(1L3D1, CoL3D0)
SL3D1 = XOR(CoL3D0, 1L3D1)
CoL3D1 = OR(3L3D1, 2L3D1)

# FULLADDER LIV 3 BIT 2
1L3D2 = XOR(W_X2Y4, SL2D3)
2L3D2 = AND(W_X2Y4, SL2D3)
3L3D2 = AND(1L3D2, CoL3D1)
SL3D2 = XOR(CoL3D1, 1L3D2)
CoL3D2 = OR(3L3D2, 2L3D2)

# FULLADDER LIV 3 BIT 3
1L3D3 = XOR(W_X3Y4, SL2D4)
2L3D3 = AND(W_X3Y4, SL2D4)
3L3D3 = AND(1L3D3, CoL3D2)
SL3D3 = XOR(CoL3D2, 1L3D3)
CoL3D3 = OR(3L3D3, 2L3D3)

# FULLADDER LIV 3 BIT 4
1L3D4 = XOR(W_X4Y4, SL2D5)
2L3D4 = AND(W_X4Y4, SL2D5)
3L3D4 = AND(1L3D4, CoL3D3)
SL3D4 = XOR(CoL3D3, 1L3D4)
CoL3D4 = OR(3L3D4, 2L3D4)

# FULLADDER LIV 3 BIT 5
1L3D5 = XOR(W_X5Y4, SL2D6)
2L3D5 = AND(W_X5Y4, SL2D6)
3L3D5 = AND(1L3D5, CoL3D4)
SL3D5 = XOR(CoL3D4, 1L3D5)
CoL3D5 = OR(3L3D5, 2L3D5)

# FULLADDER LIV 3 BIT 6
1L3D6 = XOR(W_X6Y4, SL2D7)
2L3D6 = AND(W_X6Y4, SL2D7)
3L3D6 = AND(1L3D6, CoL3D5)
SL3D6 = XOR(CoL3D5, 1L3D6)
CoL3D6 = OR(3L3D6, 2L3D6)

# FULLADDER LIV 3 BIT 7
1L3D7 = XOR(W_X7Y4, SL2D8)
2L3D7 = AND(W_X7Y4, SL2D8)
3L3D7 = AND(1L3D7, CoL3D6)
SL3D7 = XOR(CoL3D6, 1L3D7)
CoL3D7 = OR(3L3D7, 2L3D7)

# FULLADDER LIV 3 BIT 8
1L3D8 = XOR(W_X8Y4, SL2D9)
2L3D8 = AND(W_X8Y4, SL2D9)
3L3D8 = AND(1L3D8, CoL3D7)
SL3D8 = XOR(CoL3D7, 1L3D8)
CoL3D8 = OR(3L3D8, 2L3D8)

# FULLADDER LIV 3 BIT 9
1L3D9 = XOR(W_X9Y4, SL2D10)
2L3D9 = AND(W_X9Y4, SL2D10)
3L3D9 = AND(1L3D9, CoL3D8)
SL3D9 = XOR(CoL3D8, 1L3D9)
CoL3D9 = OR(3L3D9, 2L3D9)

# FULLADDER LIV 3 BIT 10
1L3D10 = XOR(W_X10Y4, SL2D11)
2L3D10 = AND(W_X10Y4, SL2D11)
3L3D10 = AND(1L3D10, CoL3D9)
SL3D10 = XOR(CoL3D9, 1L3D10)
CoL3D10 = OR(3L3D10, 2L3D10)

# FULLADDER LIV 3 BIT 11
1L3D11 = XOR(W_X11Y4, SL2D12)
2L3D11 = AND(W_X11Y4, SL2D12)
3L3D11 = AND(1L3D11, CoL3D10)
SL3D11 = XOR(CoL3D10, 1L3D11)
CoL3D11 = OR(3L3D11, 2L3D11)

# FULLADDER LIV 3 BIT 12
1L3D12 = XOR(W_X12Y4, SL2D13)
2L3D12 = AND(W_X12Y4, SL2D13)
3L3D12 = AND(1L3D12, CoL3D11)
SL3D12 = XOR(CoL3D11, 1L3D12)
CoL3D12 = OR(3L3D12, 2L3D12)

# FULLADDER LIV 3 BIT 13
1L3D13 = XOR(W_X13Y4, SL2D14)
2L3D13 = AND(W_X13Y4, SL2D14)
3L3D13 = AND(1L3D13, CoL3D12)
SL3D13 = XOR(CoL3D12, 1L3D13)
CoL3D13 = OR(3L3D13, 2L3D13)

# FULLADDER LIV 3 BIT 14
1L3D14 = XOR(W_X14Y4, SL2D15)
2L3D14 = AND(W_X14Y4, SL2D15)
3L3D14 = AND(1L3D14, CoL3D13)
SL3D14 = XOR(CoL3D13, 1L3D14)
CoL3D14 = OR(3L3D14, 2L3D14)

# FULLADDER LIV 3 BIT 15
1L3D15 = XOR(W_X15Y4, CoL2D15)
2L3D15 = AND(W_X15Y4, CoL2D15)
3L3D15 = AND(1L3D15, CoL3D14)
SL3D15 = XOR(CoL3D14, 1L3D15)
CoL3D15 = OR(3L3D15, 2L3D15)

# RCA LIVELLO 4:

# HALFADDER LIV 4 BIT 0
SL4D0 = XOR(W_X0Y5, SL3D1)
CoL4D0 = AND(W_X0Y5, SL3D1)

# FULLADDER LIV 4 BIT 1
1L4D1 = XOR(W_X1Y5, SL3D2)
2L4D1 = AND(W_X1Y5, SL3D2)
3L4D1 = AND(1L4D1, CoL4D0)
SL4D1 = XOR(CoL4D0, 1L4D1)
CoL4D1 = OR(3L4D1, 2L4D1)

# FULLADDER LIV 4 BIT 2
1L4D2 = XOR(W_X2Y5, SL3D3)
2L4D2 = AND(W_X2Y5, SL3D3)
3L4D2 = AND(1L4D2, CoL4D1)
SL4D2 = XOR(CoL4D1, 1L4D2)
CoL4D2 = OR(3L4D2, 2L4D2)

# FULLADDER LIV 4 BIT 3
1L4D3 = XOR(W_X3Y5, SL3D4)
2L4D3 = AND(W_X3Y5, SL3D4)
3L4D3 = AND(1L4D3, CoL4D2)
SL4D3 = XOR(CoL4D2, 1L4D3)
CoL4D3 = OR(3L4D3, 2L4D3)

# FULLADDER LIV 4 BIT 4
1L4D4 = XOR(W_X4Y5, SL3D5)
2L4D4 = AND(W_X4Y5, SL3D5)
3L4D4 = AND(1L4D4, CoL4D3)
SL4D4 = XOR(CoL4D3, 1L4D4)
CoL4D4 = OR(3L4D4, 2L4D4)

# FULLADDER LIV 4 BIT 5
1L4D5 = XOR(W_X5Y5, SL3D6)
2L4D5 = AND(W_X5Y5, SL3D6)
3L4D5 = AND(1L4D5, CoL4D4)
SL4D5 = XOR(CoL4D4, 1L4D5)
CoL4D5 = OR(3L4D5, 2L4D5)

# FULLADDER LIV 4 BIT 6
1L4D6 = XOR(W_X6Y5, SL3D7)
2L4D6 = AND(W_X6Y5, SL3D7)
3L4D6 = AND(1L4D6, CoL4D5)
SL4D6 = XOR(CoL4D5, 1L4D6)
CoL4D6 = OR(3L4D6, 2L4D6)

# FULLADDER LIV 4 BIT 7
1L4D7 = XOR(W_X7Y5, SL3D8)
2L4D7 = AND(W_X7Y5, SL3D8)
3L4D7 = AND(1L4D7, CoL4D6)
SL4D7 = XOR(CoL4D6, 1L4D7)
CoL4D7 = OR(3L4D7, 2L4D7)

# FULLADDER LIV 4 BIT 8
1L4D8 = XOR(W_X8Y5, SL3D9)
2L4D8 = AND(W_X8Y5, SL3D9)
3L4D8 = AND(1L4D8, CoL4D7)
SL4D8 = XOR(CoL4D7, 1L4D8)
CoL4D8 = OR(3L4D8, 2L4D8)

# FULLADDER LIV 4 BIT 9
1L4D9 = XOR(W_X9Y5, SL3D10)
2L4D9 = AND(W_X9Y5, SL3D10)
3L4D9 = AND(1L4D9, CoL4D8)
SL4D9 = XOR(CoL4D8, 1L4D9)
CoL4D9 = OR(3L4D9, 2L4D9)

# FULLADDER LIV 4 BIT 10
1L4D10 = XOR(W_X10Y5, SL3D11)
2L4D10 = AND(W_X10Y5, SL3D11)
3L4D10 = AND(1L4D10, CoL4D9)
SL4D10 = XOR(CoL4D9, 1L4D10)
CoL4D10 = OR(3L4D10, 2L4D10)

# FULLADDER LIV 4 BIT 11
1L4D11 = XOR(W_X11Y5, SL3D12)
2L4D11 = AND(W_X11Y5, SL3D12)
3L4D11 = AND(1L4D11, CoL4D10)
SL4D11 = XOR(CoL4D10, 1L4D11)
CoL4D11 = OR(3L4D11, 2L4D11)

# FULLADDER LIV 4 BIT 12
1L4D12 = XOR(W_X12Y5, SL3D13)
2L4D12 = AND(W_X12Y5, SL3D13)
3L4D12 = AND(1L4D12, CoL4D11)
SL4D12 = XOR(CoL4D11, 1L4D12)
CoL4D12 = OR(3L4D12, 2L4D12)

# FULLADDER LIV 4 BIT 13
1L4D13 = XOR(W_X13Y5, SL3D14)
2L4D13 = AND(W_X13Y5, SL3D14)
3L4D13 = AND(1L4D13, CoL4D12)
SL4D13 = XOR(CoL4D12, 1L4D13)
CoL4D13 = OR(3L4D13, 2L4D13)

# FULLADDER LIV 4 BIT 14
1L4D14 = XOR(W_X14Y5, SL3D15)
2L4D14 = AND(W_X14Y5, SL3D15)
3L4D14 = AND(1L4D14, CoL4D13)
SL4D14 = XOR(CoL4D13, 1L4D14)
CoL4D14 = OR(3L4D14, 2L4D14)

# FULLADDER LIV 4 BIT 15
1L4D15 = XOR(W_X15Y5, CoL3D15)
2L4D15 = AND(W_X15Y5, CoL3D15)
3L4D15 = AND(1L4D15, CoL4D14)
SL4D15 = XOR(CoL4D14, 1L4D15)
CoL4D15 = OR(3L4D15, 2L4D15)

# RCA LIVELLO 5:

# HALFADDER LIV 5 BIT 0
SL5D0 = XOR(W_X0Y6, SL4D1)
CoL5D0 = AND(W_X0Y6, SL4D1)

# FULLADDER LIV 5 BIT 1
1L5D1 = XOR(W_X1Y6, SL4D2)
2L5D1 = AND(W_X1Y6, SL4D2)
3L5D1 = AND(1L5D1, CoL5D0)
SL5D1 = XOR(CoL5D0, 1L5D1)
CoL5D1 = OR(3L5D1, 2L5D1)

# FULLADDER LIV 5 BIT 2
1L5D2 = XOR(W_X2Y6, SL4D3)
2L5D2 = AND(W_X2Y6, SL4D3)
3L5D2 = AND(1L5D2, CoL5D1)
SL5D2 = XOR(CoL5D1, 1L5D2)
CoL5D2 = OR(3L5D2, 2L5D2)

# FULLADDER LIV 5 BIT 3
1L5D3 = XOR(W_X3Y6, SL4D4)
2L5D3 = AND(W_X3Y6, SL4D4)
3L5D3 = AND(1L5D3, CoL5D2)
SL5D3 = XOR(CoL5D2, 1L5D3)
CoL5D3 = OR(3L5D3, 2L5D3)

# FULLADDER LIV 5 BIT 4
1L5D4 = XOR(W_X4Y6, SL4D5)
2L5D4 = AND(W_X4Y6, SL4D5)
3L5D4 = AND(1L5D4, CoL5D3)
SL5D4 = XOR(CoL5D3, 1L5D4)
CoL5D4 = OR(3L5D4, 2L5D4)

# FULLADDER LIV 5 BIT 5
1L5D5 = XOR(W_X5Y6, SL4D6)
2L5D5 = AND(W_X5Y6, SL4D6)
3L5D5 = AND(1L5D5, CoL5D4)
SL5D5 = XOR(CoL5D4, 1L5D5)
CoL5D5 = OR(3L5D5, 2L5D5)

# FULLADDER LIV 5 BIT 6
1L5D6 = XOR(W_X6Y6, SL4D7)
2L5D6 = AND(W_X6Y6, SL4D7)
3L5D6 = AND(1L5D6, CoL5D5)
SL5D6 = XOR(CoL5D5, 1L5D6)
CoL5D6 = OR(3L5D6, 2L5D6)

# FULLADDER LIV 5 BIT 7
1L5D7 = XOR(W_X7Y6, SL4D8)
2L5D7 = AND(W_X7Y6, SL4D8)
3L5D7 = AND(1L5D7, CoL5D6)
SL5D7 = XOR(CoL5D6, 1L5D7)
CoL5D7 = OR(3L5D7, 2L5D7)

# FULLADDER LIV 5 BIT 8
1L5D8 = XOR(W_X8Y6, SL4D9)
2L5D8 = AND(W_X8Y6, SL4D9)
3L5D8 = AND(1L5D8, CoL5D7)
SL5D8 = XOR(CoL5D7, 1L5D8)
CoL5D8 = OR(3L5D8, 2L5D8)

# FULLADDER LIV 5 BIT 9
1L5D9 = XOR(W_X9Y6, SL4D10)
2L5D9 = AND(W_X9Y6, SL4D10)
3L5D9 = AND(1L5D9, CoL5D8)
SL5D9 = XOR(CoL5D8, 1L5D9)
CoL5D9 = OR(3L5D9, 2L5D9)

# FULLADDER LIV 5 BIT 10
1L5D10 = XOR(W_X10Y6, SL4D11)
2L5D10 = AND(W_X10Y6, SL4D11)
3L5D10 = AND(1L5D10, CoL5D9)
SL5D10 = XOR(CoL5D9, 1L5D10)
CoL5D10 = OR(3L5D10, 2L5D10)

# FULLADDER LIV 5 BIT 11
1L5D11 = XOR(W_X11Y6, SL4D12)
2L5D11 = AND(W_X11Y6, SL4D12)
3L5D11 = AND(1L5D11, CoL5D10)
SL5D11 = XOR(CoL5D10, 1L5D11)
CoL5D11 = OR(3L5D11, 2L5D11)

# FULLADDER LIV 5 BIT 12
1L5D12 = XOR(W_X12Y6, SL4D13)
2L5D12 = AND(W_X12Y6, SL4D13)
3L5D12 = AND(1L5D12, CoL5D11)
SL5D12 = XOR(CoL5D11, 1L5D12)
CoL5D12 = OR(3L5D12, 2L5D12)

# FULLADDER LIV 5 BIT 13
1L5D13 = XOR(W_X13Y6, SL4D14)
2L5D13 = AND(W_X13Y6, SL4D14)
3L5D13 = AND(1L5D13, CoL5D12)
SL5D13 = XOR(CoL5D12, 1L5D13)
CoL5D13 = OR(3L5D13, 2L5D13)

# FULLADDER LIV 5 BIT 14
1L5D14 = XOR(W_X14Y6, SL4D15)
2L5D14 = AND(W_X14Y6, SL4D15)
3L5D14 = AND(1L5D14, CoL5D13)
SL5D14 = XOR(CoL5D13, 1L5D14)
CoL5D14 = OR(3L5D14, 2L5D14)

# FULLADDER LIV 5 BIT 15
1L5D15 = XOR(W_X15Y6, CoL4D15)
2L5D15 = AND(W_X15Y6, CoL4D15)
3L5D15 = AND(1L5D15, CoL5D14)
SL5D15 = XOR(CoL5D14, 1L5D15)
CoL5D15 = OR(3L5D15, 2L5D15)

# RCA LIVELLO 6:

# HALFADDER LIV 6 BIT 0
SL6D0 = XOR(W_X0Y7, SL5D1)
CoL6D0 = AND(W_X0Y7, SL5D1)

# FULLADDER LIV 6 BIT 1
1L6D1 = XOR(W_X1Y7, SL5D2)
2L6D1 = AND(W_X1Y7, SL5D2)
3L6D1 = AND(1L6D1, CoL6D0)
SL6D1 = XOR(CoL6D0, 1L6D1)
CoL6D1 = OR(3L6D1, 2L6D1)

# FULLADDER LIV 6 BIT 2
1L6D2 = XOR(W_X2Y7, SL5D3)
2L6D2 = AND(W_X2Y7, SL5D3)
3L6D2 = AND(1L6D2, CoL6D1)
SL6D2 = XOR(CoL6D1, 1L6D2)
CoL6D2 = OR(3L6D2, 2L6D2)

# FULLADDER LIV 6 BIT 3
1L6D3 = XOR(W_X3Y7, SL5D4)
2L6D3 = AND(W_X3Y7, SL5D4)
3L6D3 = AND(1L6D3, CoL6D2)
SL6D3 = XOR(CoL6D2, 1L6D3)
CoL6D3 = OR(3L6D3, 2L6D3)

# FULLADDER LIV 6 BIT 4
1L6D4 = XOR(W_X4Y7, SL5D5)
2L6D4 = AND(W_X4Y7, SL5D5)
3L6D4 = AND(1L6D4, CoL6D3)
SL6D4 = XOR(CoL6D3, 1L6D4)
CoL6D4 = OR(3L6D4, 2L6D4)

# FULLADDER LIV 6 BIT 5
1L6D5 = XOR(W_X5Y7, SL5D6)
2L6D5 = AND(W_X5Y7, SL5D6)
3L6D5 = AND(1L6D5, CoL6D4)
SL6D5 = XOR(CoL6D4, 1L6D5)
CoL6D5 = OR(3L6D5, 2L6D5)

# FULLADDER LIV 6 BIT 6
1L6D6 = XOR(W_X6Y7, SL5D7)
2L6D6 = AND(W_X6Y7, SL5D7)
3L6D6 = AND(1L6D6, CoL6D5)
SL6D6 = XOR(CoL6D5, 1L6D6)
CoL6D6 = OR(3L6D6, 2L6D6)

# FULLADDER LIV 6 BIT 7
1L6D7 = XOR(W_X7Y7, SL5D8)
2L6D7 = AND(W_X7Y7, SL5D8)
3L6D7 = AND(1L6D7, CoL6D6)
SL6D7 = XOR(CoL6D6, 1L6D7)
CoL6D7 = OR(3L6D7, 2L6D7)

# FULLADDER LIV 6 BIT 8
1L6D8 = XOR(W_X8Y7, SL5D9)
2L6D8 = AND(W_X8Y7, SL5D9)
3L6D8 = AND(1L6D8, CoL6D7)
SL6D8 = XOR(CoL6D7, 1L6D8)
CoL6D8 = OR(3L6D8, 2L6D8)

# FULLADDER LIV 6 BIT 9
1L6D9 = XOR(W_X9Y7, SL5D10)
2L6D9 = AND(W_X9Y7, SL5D10)
3L6D9 = AND(1L6D9, CoL6D8)
SL6D9 = XOR(CoL6D8, 1L6D9)
CoL6D9 = OR(3L6D9, 2L6D9)

# FULLADDER LIV 6 BIT 10
1L6D10 = XOR(W_X10Y7, SL5D11)
2L6D10 = AND(W_X10Y7, SL5D11)
3L6D10 = AND(1L6D10, CoL6D9)
SL6D10 = XOR(CoL6D9, 1L6D10)
CoL6D10 = OR(3L6D10, 2L6D10)

# FULLADDER LIV 6 BIT 11
1L6D11 = XOR(W_X11Y7, SL5D12)
2L6D11 = AND(W_X11Y7, SL5D12)
3L6D11 = AND(1L6D11, CoL6D10)
SL6D11 = XOR(CoL6D10, 1L6D11)
CoL6D11 = OR(3L6D11, 2L6D11)

# FULLADDER LIV 6 BIT 12
1L6D12 = XOR(W_X12Y7, SL5D13)
2L6D12 = AND(W_X12Y7, SL5D13)
3L6D12 = AND(1L6D12, CoL6D11)
SL6D12 = XOR(CoL6D11, 1L6D12)
CoL6D12 = OR(3L6D12, 2L6D12)

# FULLADDER LIV 6 BIT 13
1L6D13 = XOR(W_X13Y7, SL5D14)
2L6D13 = AND(W_X13Y7, SL5D14)
3L6D13 = AND(1L6D13, CoL6D12)
SL6D13 = XOR(CoL6D12, 1L6D13)
CoL6D13 = OR(3L6D13, 2L6D13)

# FULLADDER LIV 6 BIT 14
1L6D14 = XOR(W_X14Y7, SL5D15)
2L6D14 = AND(W_X14Y7, SL5D15)
3L6D14 = AND(1L6D14, CoL6D13)
SL6D14 = XOR(CoL6D13, 1L6D14)
CoL6D14 = OR(3L6D14, 2L6D14)

# FULLADDER LIV 6 BIT 15
1L6D15 = XOR(W_X15Y7, CoL5D15)
2L6D15 = AND(W_X15Y7, CoL5D15)
3L6D15 = AND(1L6D15, CoL6D14)
SL6D15 = XOR(CoL6D14, 1L6D15)
CoL6D15 = OR(3L6D15, 2L6D15)

# RCA LIVELLO 7:

# HALFADDER LIV 7 BIT 0
SL7D0 = XOR(W_X0Y8, SL6D1)
CoL7D0 = AND(W_X0Y8, SL6D1)

# FULLADDER LIV 7 BIT 1
1L7D1 = XOR(W_X1Y8, SL6D2)
2L7D1 = AND(W_X1Y8, SL6D2)
3L7D1 = AND(1L7D1, CoL7D0)
SL7D1 = XOR(CoL7D0, 1L7D1)
CoL7D1 = OR(3L7D1, 2L7D1)

# FULLADDER LIV 7 BIT 2
1L7D2 = XOR(W_X2Y8, SL6D3)
2L7D2 = AND(W_X2Y8, SL6D3)
3L7D2 = AND(1L7D2, CoL7D1)
SL7D2 = XOR(CoL7D1, 1L7D2)
CoL7D2 = OR(3L7D2, 2L7D2)

# FULLADDER LIV 7 BIT 3
1L7D3 = XOR(W_X3Y8, SL6D4)
2L7D3 = AND(W_X3Y8, SL6D4)
3L7D3 = AND(1L7D3, CoL7D2)
SL7D3 = XOR(CoL7D2, 1L7D3)
CoL7D3 = OR(3L7D3, 2L7D3)

# FULLADDER LIV 7 BIT 4
1L7D4 = XOR(W_X4Y8, SL6D5)
2L7D4 = AND(W_X4Y8, SL6D5)
3L7D4 = AND(1L7D4, CoL7D3)
SL7D4 = XOR(CoL7D3, 1L7D4)
CoL7D4 = OR(3L7D4, 2L7D4)

# FULLADDER LIV 7 BIT 5
1L7D5 = XOR(W_X5Y8, SL6D6)
2L7D5 = AND(W_X5Y8, SL6D6)
3L7D5 = AND(1L7D5, CoL7D4)
SL7D5 = XOR(CoL7D4, 1L7D5)
CoL7D5 = OR(3L7D5, 2L7D5)

# FULLADDER LIV 7 BIT 6
1L7D6 = XOR(W_X6Y8, SL6D7)
2L7D6 = AND(W_X6Y8, SL6D7)
3L7D6 = AND(1L7D6, CoL7D5)
SL7D6 = XOR(CoL7D5, 1L7D6)
CoL7D6 = OR(3L7D6, 2L7D6)

# FULLADDER LIV 7 BIT 7
1L7D7 = XOR(W_X7Y8, SL6D8)
2L7D7 = AND(W_X7Y8, SL6D8)
3L7D7 = AND(1L7D7, CoL7D6)
SL7D7 = XOR(CoL7D6, 1L7D7)
CoL7D7 = OR(3L7D7, 2L7D7)

# FULLADDER LIV 7 BIT 8
1L7D8 = XOR(W_X8Y8, SL6D9)
2L7D8 = AND(W_X8Y8, SL6D9)
3L7D8 = AND(1L7D8, CoL7D7)
SL7D8 = XOR(CoL7D7, 1L7D8)
CoL7D8 = OR(3L7D8, 2L7D8)

# FULLADDER LIV 7 BIT 9
1L7D9 = XOR(W_X9Y8, SL6D10)
2L7D9 = AND(W_X9Y8, SL6D10)
3L7D9 = AND(1L7D9, CoL7D8)
SL7D9 = XOR(CoL7D8, 1L7D9)
CoL7D9 = OR(3L7D9, 2L7D9)

# FULLADDER LIV 7 BIT 10
1L7D10 = XOR(W_X10Y8, SL6D11)
2L7D10 = AND(W_X10Y8, SL6D11)
3L7D10 = AND(1L7D10, CoL7D9)
SL7D10 = XOR(CoL7D9, 1L7D10)
CoL7D10 = OR(3L7D10, 2L7D10)

# FULLADDER LIV 7 BIT 11
1L7D11 = XOR(W_X11Y8, SL6D12)
2L7D11 = AND(W_X11Y8, SL6D12)
3L7D11 = AND(1L7D11, CoL7D10)
SL7D11 = XOR(CoL7D10, 1L7D11)
CoL7D11 = OR(3L7D11, 2L7D11)

# FULLADDER LIV 7 BIT 12
1L7D12 = XOR(W_X12Y8, SL6D13)
2L7D12 = AND(W_X12Y8, SL6D13)
3L7D12 = AND(1L7D12, CoL7D11)
SL7D12 = XOR(CoL7D11, 1L7D12)
CoL7D12 = OR(3L7D12, 2L7D12)

# FULLADDER LIV 7 BIT 13
1L7D13 = XOR(W_X13Y8, SL6D14)
2L7D13 = AND(W_X13Y8, SL6D14)
3L7D13 = AND(1L7D13, CoL7D12)
SL7D13 = XOR(CoL7D12, 1L7D13)
CoL7D13 = OR(3L7D13, 2L7D13)

# FULLADDER LIV 7 BIT 14
1L7D14 = XOR(W_X14Y8, SL6D15)
2L7D14 = AND(W_X14Y8, SL6D15)
3L7D14 = AND(1L7D14, CoL7D13)
SL7D14 = XOR(CoL7D13, 1L7D14)
CoL7D14 = OR(3L7D14, 2L7D14)

# FULLADDER LIV 7 BIT 15
1L7D15 = XOR(W_X15Y8, CoL6D15)
2L7D15 = AND(W_X15Y8, CoL6D15)
3L7D15 = AND(1L7D15, CoL7D14)
SL7D15 = XOR(CoL7D14, 1L7D15)
CoL7D15 = OR(3L7D15, 2L7D15)

# RCA LIVELLO 8:

# HALFADDER LIV 8 BIT 0
SL8D0 = XOR(W_X0Y9, SL7D1)
CoL8D0 = AND(W_X0Y9, SL7D1)

# FULLADDER LIV 8 BIT 1
1L8D1 = XOR(W_X1Y9, SL7D2)
2L8D1 = AND(W_X1Y9, SL7D2)
3L8D1 = AND(1L8D1, CoL8D0)
SL8D1 = XOR(CoL8D0, 1L8D1)
CoL8D1 = OR(3L8D1, 2L8D1)

# FULLADDER LIV 8 BIT 2
1L8D2 = XOR(W_X2Y9, SL7D3)
2L8D2 = AND(W_X2Y9, SL7D3)
3L8D2 = AND(1L8D2, CoL8D1)
SL8D2 = XOR(CoL8D1, 1L8D2)
CoL8D2 = OR(3L8D2, 2L8D2)

# FULLADDER LIV 8 BIT 3
1L8D3 = XOR(W_X3Y9, SL7D4)
2L8D3 = AND(W_X3Y9, SL7D4)
3L8D3 = AND(1L8D3, CoL8D2)
SL8D3 = XOR(CoL8D2, 1L8D3)
CoL8D3 = OR(3L8D3, 2L8D3)

# FULLADDER LIV 8 BIT 4
1L8D4 = XOR(W_X4Y9, SL7D5)
2L8D4 = AND(W_X4Y9, SL7D5)
3L8D4 = AND(1L8D4, CoL8D3)
SL8D4 = XOR(CoL8D3, 1L8D4)
CoL8D4 = OR(3L8D4, 2L8D4)

# FULLADDER LIV 8 BIT 5
1L8D5 = XOR(W_X5Y9, SL7D6)
2L8D5 = AND(W_X5Y9, SL7D6)
3L8D5 = AND(1L8D5, CoL8D4)
SL8D5 = XOR(CoL8D4, 1L8D5)
CoL8D5 = OR(3L8D5, 2L8D5)

# FULLADDER LIV 8 BIT 6
1L8D6 = XOR(W_X6Y9, SL7D7)
2L8D6 = AND(W_X6Y9, SL7D7)
3L8D6 = AND(1L8D6, CoL8D5)
SL8D6 = XOR(CoL8D5, 1L8D6)
CoL8D6 = OR(3L8D6, 2L8D6)

# FULLADDER LIV 8 BIT 7
1L8D7 = XOR(W_X7Y9, SL7D8)
2L8D7 = AND(W_X7Y9, SL7D8)
3L8D7 = AND(1L8D7, CoL8D6)
SL8D7 = XOR(CoL8D6, 1L8D7)
CoL8D7 = OR(3L8D7, 2L8D7)

# FULLADDER LIV 8 BIT 8
1L8D8 = XOR(W_X8Y9, SL7D9)
2L8D8 = AND(W_X8Y9, SL7D9)
3L8D8 = AND(1L8D8, CoL8D7)
SL8D8 = XOR(CoL8D7, 1L8D8)
CoL8D8 = OR(3L8D8, 2L8D8)

# FULLADDER LIV 8 BIT 9
1L8D9 = XOR(W_X9Y9, SL7D10)
2L8D9 = AND(W_X9Y9, SL7D10)
3L8D9 = AND(1L8D9, CoL8D8)
SL8D9 = XOR(CoL8D8, 1L8D9)
CoL8D9 = OR(3L8D9, 2L8D9)

# FULLADDER LIV 8 BIT 10
1L8D10 = XOR(W_X10Y9, SL7D11)
2L8D10 = AND(W_X10Y9, SL7D11)
3L8D10 = AND(1L8D10, CoL8D9)
SL8D10 = XOR(CoL8D9, 1L8D10)
CoL8D10 = OR(3L8D10, 2L8D10)

# FULLADDER LIV 8 BIT 11
1L8D11 = XOR(W_X11Y9, SL7D12)
2L8D11 = AND(W_X11Y9, SL7D12)
3L8D11 = AND(1L8D11, CoL8D10)
SL8D11 = XOR(CoL8D10, 1L8D11)
CoL8D11 = OR(3L8D11, 2L8D11)

# FULLADDER LIV 8 BIT 12
1L8D12 = XOR(W_X12Y9, SL7D13)
2L8D12 = AND(W_X12Y9, SL7D13)
3L8D12 = AND(1L8D12, CoL8D11)
SL8D12 = XOR(CoL8D11, 1L8D12)
CoL8D12 = OR(3L8D12, 2L8D12)

# FULLADDER LIV 8 BIT 13
1L8D13 = XOR(W_X13Y9, SL7D14)
2L8D13 = AND(W_X13Y9, SL7D14)
3L8D13 = AND(1L8D13, CoL8D12)
SL8D13 = XOR(CoL8D12, 1L8D13)
CoL8D13 = OR(3L8D13, 2L8D13)

# FULLADDER LIV 8 BIT 14
1L8D14 = XOR(W_X14Y9, SL7D15)
2L8D14 = AND(W_X14Y9, SL7D15)
3L8D14 = AND(1L8D14, CoL8D13)
SL8D14 = XOR(CoL8D13, 1L8D14)
CoL8D14 = OR(3L8D14, 2L8D14)

# FULLADDER LIV 8 BIT 15
1L8D15 = XOR(W_X15Y9, CoL7D15)
2L8D15 = AND(W_X15Y9, CoL7D15)
3L8D15 = AND(1L8D15, CoL8D14)
SL8D15 = XOR(CoL8D14, 1L8D15)
CoL8D15 = OR(3L8D15, 2L8D15)

# RCA LIVELLO 9:

# HALFADDER LIV 9 BIT 0
SL9D0 = XOR(W_X0Y10, SL8D1)
CoL9D0 = AND(W_X0Y10, SL8D1)

# FULLADDER LIV 9 BIT 1
1L9D1 = XOR(W_X1Y10, SL8D2)
2L9D1 = AND(W_X1Y10, SL8D2)
3L9D1 = AND(1L9D1, CoL9D0)
SL9D1 = XOR(CoL9D0, 1L9D1)
CoL9D1 = OR(3L9D1, 2L9D1)

# FULLADDER LIV 9 BIT 2
1L9D2 = XOR(W_X2Y10, SL8D3)
2L9D2 = AND(W_X2Y10, SL8D3)
3L9D2 = AND(1L9D2, CoL9D1)
SL9D2 = XOR(CoL9D1, 1L9D2)
CoL9D2 = OR(3L9D2, 2L9D2)

# FULLADDER LIV 9 BIT 3
1L9D3 = XOR(W_X3Y10, SL8D4)
2L9D3 = AND(W_X3Y10, SL8D4)
3L9D3 = AND(1L9D3, CoL9D2)
SL9D3 = XOR(CoL9D2, 1L9D3)
CoL9D3 = OR(3L9D3, 2L9D3)

# FULLADDER LIV 9 BIT 4
1L9D4 = XOR(W_X4Y10, SL8D5)
2L9D4 = AND(W_X4Y10, SL8D5)
3L9D4 = AND(1L9D4, CoL9D3)
SL9D4 = XOR(CoL9D3, 1L9D4)
CoL9D4 = OR(3L9D4, 2L9D4)

# FULLADDER LIV 9 BIT 5
1L9D5 = XOR(W_X5Y10, SL8D6)
2L9D5 = AND(W_X5Y10, SL8D6)
3L9D5 = AND(1L9D5, CoL9D4)
SL9D5 = XOR(CoL9D4, 1L9D5)
CoL9D5 = OR(3L9D5, 2L9D5)

# FULLADDER LIV 9 BIT 6
1L9D6 = XOR(W_X6Y10, SL8D7)
2L9D6 = AND(W_X6Y10, SL8D7)
3L9D6 = AND(1L9D6, CoL9D5)
SL9D6 = XOR(CoL9D5, 1L9D6)
CoL9D6 = OR(3L9D6, 2L9D6)

# FULLADDER LIV 9 BIT 7
1L9D7 = XOR(W_X7Y10, SL8D8)
2L9D7 = AND(W_X7Y10, SL8D8)
3L9D7 = AND(1L9D7, CoL9D6)
SL9D7 = XOR(CoL9D6, 1L9D7)
CoL9D7 = OR(3L9D7, 2L9D7)

# FULLADDER LIV 9 BIT 8
1L9D8 = XOR(W_X8Y10, SL8D9)
2L9D8 = AND(W_X8Y10, SL8D9)
3L9D8 = AND(1L9D8, CoL9D7)
SL9D8 = XOR(CoL9D7, 1L9D8)
CoL9D8 = OR(3L9D8, 2L9D8)

# FULLADDER LIV 9 BIT 9
1L9D9 = XOR(W_X9Y10, SL8D10)
2L9D9 = AND(W_X9Y10, SL8D10)
3L9D9 = AND(1L9D9, CoL9D8)
SL9D9 = XOR(CoL9D8, 1L9D9)
CoL9D9 = OR(3L9D9, 2L9D9)

# FULLADDER LIV 9 BIT 10
1L9D10 = XOR(W_X10Y10, SL8D11)
2L9D10 = AND(W_X10Y10, SL8D11)
3L9D10 = AND(1L9D10, CoL9D9)
SL9D10 = XOR(CoL9D9, 1L9D10)
CoL9D10 = OR(3L9D10, 2L9D10)

# FULLADDER LIV 9 BIT 11
1L9D11 = XOR(W_X11Y10, SL8D12)
2L9D11 = AND(W_X11Y10, SL8D12)
3L9D11 = AND(1L9D11, CoL9D10)
SL9D11 = XOR(CoL9D10, 1L9D11)
CoL9D11 = OR(3L9D11, 2L9D11)

# FULLADDER LIV 9 BIT 12
1L9D12 = XOR(W_X12Y10, SL8D13)
2L9D12 = AND(W_X12Y10, SL8D13)
3L9D12 = AND(1L9D12, CoL9D11)
SL9D12 = XOR(CoL9D11, 1L9D12)
CoL9D12 = OR(3L9D12, 2L9D12)

# FULLADDER LIV 9 BIT 13
1L9D13 = XOR(W_X13Y10, SL8D14)
2L9D13 = AND(W_X13Y10, SL8D14)
3L9D13 = AND(1L9D13, CoL9D12)
SL9D13 = XOR(CoL9D12, 1L9D13)
CoL9D13 = OR(3L9D13, 2L9D13)

# FULLADDER LIV 9 BIT 14
1L9D14 = XOR(W_X14Y10, SL8D15)
2L9D14 = AND(W_X14Y10, SL8D15)
3L9D14 = AND(1L9D14, CoL9D13)
SL9D14 = XOR(CoL9D13, 1L9D14)
CoL9D14 = OR(3L9D14, 2L9D14)

# FULLADDER LIV 9 BIT 15
1L9D15 = XOR(W_X15Y10, CoL8D15)
2L9D15 = AND(W_X15Y10, CoL8D15)
3L9D15 = AND(1L9D15, CoL9D14)
SL9D15 = XOR(CoL9D14, 1L9D15)
CoL9D15 = OR(3L9D15, 2L9D15)

# RCA LIVELLO 10:

# HALFADDER LIV 10 BIT 0
SL10D0 = XOR(W_X0Y11, SL9D1)
CoL10D0 = AND(W_X0Y11, SL9D1)

# FULLADDER LIV 10 BIT 1
1L10D1 = XOR(W_X1Y11, SL9D2)
2L10D1 = AND(W_X1Y11, SL9D2)
3L10D1 = AND(1L10D1, CoL10D0)
SL10D1 = XOR(CoL10D0, 1L10D1)
CoL10D1 = OR(3L10D1, 2L10D1)

# FULLADDER LIV 10 BIT 2
1L10D2 = XOR(W_X2Y11, SL9D3)
2L10D2 = AND(W_X2Y11, SL9D3)
3L10D2 = AND(1L10D2, CoL10D1)
SL10D2 = XOR(CoL10D1, 1L10D2)
CoL10D2 = OR(3L10D2, 2L10D2)

# FULLADDER LIV 10 BIT 3
1L10D3 = XOR(W_X3Y11, SL9D4)
2L10D3 = AND(W_X3Y11, SL9D4)
3L10D3 = AND(1L10D3, CoL10D2)
SL10D3 = XOR(CoL10D2, 1L10D3)
CoL10D3 = OR(3L10D3, 2L10D3)

# FULLADDER LIV 10 BIT 4
1L10D4 = XOR(W_X4Y11, SL9D5)
2L10D4 = AND(W_X4Y11, SL9D5)
3L10D4 = AND(1L10D4, CoL10D3)
SL10D4 = XOR(CoL10D3, 1L10D4)
CoL10D4 = OR(3L10D4, 2L10D4)

# FULLADDER LIV 10 BIT 5
1L10D5 = XOR(W_X5Y11, SL9D6)
2L10D5 = AND(W_X5Y11, SL9D6)
3L10D5 = AND(1L10D5, CoL10D4)
SL10D5 = XOR(CoL10D4, 1L10D5)
CoL10D5 = OR(3L10D5, 2L10D5)

# FULLADDER LIV 10 BIT 6
1L10D6 = XOR(W_X6Y11, SL9D7)
2L10D6 = AND(W_X6Y11, SL9D7)
3L10D6 = AND(1L10D6, CoL10D5)
SL10D6 = XOR(CoL10D5, 1L10D6)
CoL10D6 = OR(3L10D6, 2L10D6)

# FULLADDER LIV 10 BIT 7
1L10D7 = XOR(W_X7Y11, SL9D8)
2L10D7 = AND(W_X7Y11, SL9D8)
3L10D7 = AND(1L10D7, CoL10D6)
SL10D7 = XOR(CoL10D6, 1L10D7)
CoL10D7 = OR(3L10D7, 2L10D7)

# FULLADDER LIV 10 BIT 8
1L10D8 = XOR(W_X8Y11, SL9D9)
2L10D8 = AND(W_X8Y11, SL9D9)
3L10D8 = AND(1L10D8, CoL10D7)
SL10D8 = XOR(CoL10D7, 1L10D8)
CoL10D8 = OR(3L10D8, 2L10D8)

# FULLADDER LIV 10 BIT 9
1L10D9 = XOR(W_X9Y11, SL9D10)
2L10D9 = AND(W_X9Y11, SL9D10)
3L10D9 = AND(1L10D9, CoL10D8)
SL10D9 = XOR(CoL10D8, 1L10D9)
CoL10D9 = OR(3L10D9, 2L10D9)

# FULLADDER LIV 10 BIT 10
1L10D10 = XOR(W_X10Y11, SL9D11)
2L10D10 = AND(W_X10Y11, SL9D11)
3L10D10 = AND(1L10D10, CoL10D9)
SL10D10 = XOR(CoL10D9, 1L10D10)
CoL10D10 = OR(3L10D10, 2L10D10)

# FULLADDER LIV 10 BIT 11
1L10D11 = XOR(W_X11Y11, SL9D12)
2L10D11 = AND(W_X11Y11, SL9D12)
3L10D11 = AND(1L10D11, CoL10D10)
SL10D11 = XOR(CoL10D10, 1L10D11)
CoL10D11 = OR(3L10D11, 2L10D11)

# FULLADDER LIV 10 BIT 12
1L10D12 = XOR(W_X12Y11, SL9D13)
2L10D12 = AND(W_X12Y11, SL9D13)
3L10D12 = AND(1L10D12, CoL10D11)
SL10D12 = XOR(CoL10D11, 1L10D12)
CoL10D12 = OR(3L10D12, 2L10D12)

# FULLADDER LIV 10 BIT 13
1L10D13 = XOR(W_X13Y11, SL9D14)
2L10D13 = AND(W_X13Y11, SL9D14)
3L10D13 = AND(1L10D13, CoL10D12)
SL10D13 = XOR(CoL10D12, 1L10D13)
CoL10D13 = OR(3L10D13, 2L10D13)

# FULLADDER LIV 10 BIT 14
1L10D14 = XOR(W_X14Y11, SL9D15)
2L10D14 = AND(W_X14Y11, SL9D15)
3L10D14 = AND(1L10D14, CoL10D13)
SL10D14 = XOR(CoL10D13, 1L10D14)
CoL10D14 = OR(3L10D14, 2L10D14)

# FULLADDER LIV 10 BIT 15
1L10D15 = XOR(W_X15Y11, CoL9D15)
2L10D15 = AND(W_X15Y11, CoL9D15)
3L10D15 = AND(1L10D15, CoL10D14)
SL10D15 = XOR(CoL10D14, 1L10D15)
CoL10D15 = OR(3L10D15, 2L10D15)

# RCA LIVELLO 11:

# HALFADDER LIV 11 BIT 0
SL11D0 = XOR(W_X0Y12, SL10D1)
CoL11D0 = AND(W_X0Y12, SL10D1)

# FULLADDER LIV 11 BIT 1
1L11D1 = XOR(W_X1Y12, SL10D2)
2L11D1 = AND(W_X1Y12, SL10D2)
3L11D1 = AND(1L11D1, CoL11D0)
SL11D1 = XOR(CoL11D0, 1L11D1)
CoL11D1 = OR(3L11D1, 2L11D1)

# FULLADDER LIV 11 BIT 2
1L11D2 = XOR(W_X2Y12, SL10D3)
2L11D2 = AND(W_X2Y12, SL10D3)
3L11D2 = AND(1L11D2, CoL11D1)
SL11D2 = XOR(CoL11D1, 1L11D2)
CoL11D2 = OR(3L11D2, 2L11D2)

# FULLADDER LIV 11 BIT 3
1L11D3 = XOR(W_X3Y12, SL10D4)
2L11D3 = AND(W_X3Y12, SL10D4)
3L11D3 = AND(1L11D3, CoL11D2)
SL11D3 = XOR(CoL11D2, 1L11D3)
CoL11D3 = OR(3L11D3, 2L11D3)

# FULLADDER LIV 11 BIT 4
1L11D4 = XOR(W_X4Y12, SL10D5)
2L11D4 = AND(W_X4Y12, SL10D5)
3L11D4 = AND(1L11D4, CoL11D3)
SL11D4 = XOR(CoL11D3, 1L11D4)
CoL11D4 = OR(3L11D4, 2L11D4)

# FULLADDER LIV 11 BIT 5
1L11D5 = XOR(W_X5Y12, SL10D6)
2L11D5 = AND(W_X5Y12, SL10D6)
3L11D5 = AND(1L11D5, CoL11D4)
SL11D5 = XOR(CoL11D4, 1L11D5)
CoL11D5 = OR(3L11D5, 2L11D5)

# FULLADDER LIV 11 BIT 6
1L11D6 = XOR(W_X6Y12, SL10D7)
2L11D6 = AND(W_X6Y12, SL10D7)
3L11D6 = AND(1L11D6, CoL11D5)
SL11D6 = XOR(CoL11D5, 1L11D6)
CoL11D6 = OR(3L11D6, 2L11D6)

# FULLADDER LIV 11 BIT 7
1L11D7 = XOR(W_X7Y12, SL10D8)
2L11D7 = AND(W_X7Y12, SL10D8)
3L11D7 = AND(1L11D7, CoL11D6)
SL11D7 = XOR(CoL11D6, 1L11D7)
CoL11D7 = OR(3L11D7, 2L11D7)

# FULLADDER LIV 11 BIT 8
1L11D8 = XOR(W_X8Y12, SL10D9)
2L11D8 = AND(W_X8Y12, SL10D9)
3L11D8 = AND(1L11D8, CoL11D7)
SL11D8 = XOR(CoL11D7, 1L11D8)
CoL11D8 = OR(3L11D8, 2L11D8)

# FULLADDER LIV 11 BIT 9
1L11D9 = XOR(W_X9Y12, SL10D10)
2L11D9 = AND(W_X9Y12, SL10D10)
3L11D9 = AND(1L11D9, CoL11D8)
SL11D9 = XOR(CoL11D8, 1L11D9)
CoL11D9 = OR(3L11D9, 2L11D9)

# FULLADDER LIV 11 BIT 10
1L11D10 = XOR(W_X10Y12, SL10D11)
2L11D10 = AND(W_X10Y12, SL10D11)
3L11D10 = AND(1L11D10, CoL11D9)
SL11D10 = XOR(CoL11D9, 1L11D10)
CoL11D10 = OR(3L11D10, 2L11D10)

# FULLADDER LIV 11 BIT 11
1L11D11 = XOR(W_X11Y12, SL10D12)
2L11D11 = AND(W_X11Y12, SL10D12)
3L11D11 = AND(1L11D11, CoL11D10)
SL11D11 = XOR(CoL11D10, 1L11D11)
CoL11D11 = OR(3L11D11, 2L11D11)

# FULLADDER LIV 11 BIT 12
1L11D12 = XOR(W_X12Y12, SL10D13)
2L11D12 = AND(W_X12Y12, SL10D13)
3L11D12 = AND(1L11D12, CoL11D11)
SL11D12 = XOR(CoL11D11, 1L11D12)
CoL11D12 = OR(3L11D12, 2L11D12)

# FULLADDER LIV 11 BIT 13
1L11D13 = XOR(W_X13Y12, SL10D14)
2L11D13 = AND(W_X13Y12, SL10D14)
3L11D13 = AND(1L11D13, CoL11D12)
SL11D13 = XOR(CoL11D12, 1L11D13)
CoL11D13 = OR(3L11D13, 2L11D13)

# FULLADDER LIV 11 BIT 14
1L11D14 = XOR(W_X14Y12, SL10D15)
2L11D14 = AND(W_X14Y12, SL10D15)
3L11D14 = AND(1L11D14, CoL11D13)
SL11D14 = XOR(CoL11D13, 1L11D14)
CoL11D14 = OR(3L11D14, 2L11D14)

# FULLADDER LIV 11 BIT 15
1L11D15 = XOR(W_X15Y12, CoL10D15)
2L11D15 = AND(W_X15Y12, CoL10D15)
3L11D15 = AND(1L11D15, CoL11D14)
SL11D15 = XOR(CoL11D14, 1L11D15)
CoL11D15 = OR(3L11D15, 2L11D15)

# RCA LIVELLO 12:

# HALFADDER LIV 12 BIT 0
SL12D0 = XOR(W_X0Y13, SL11D1)
CoL12D0 = AND(W_X0Y13, SL11D1)

# FULLADDER LIV 12 BIT 1
1L12D1 = XOR(W_X1Y13, SL11D2)
2L12D1 = AND(W_X1Y13, SL11D2)
3L12D1 = AND(1L12D1, CoL12D0)
SL12D1 = XOR(CoL12D0, 1L12D1)
CoL12D1 = OR(3L12D1, 2L12D1)

# FULLADDER LIV 12 BIT 2
1L12D2 = XOR(W_X2Y13, SL11D3)
2L12D2 = AND(W_X2Y13, SL11D3)
3L12D2 = AND(1L12D2, CoL12D1)
SL12D2 = XOR(CoL12D1, 1L12D2)
CoL12D2 = OR(3L12D2, 2L12D2)

# FULLADDER LIV 12 BIT 3
1L12D3 = XOR(W_X3Y13, SL11D4)
2L12D3 = AND(W_X3Y13, SL11D4)
3L12D3 = AND(1L12D3, CoL12D2)
SL12D3 = XOR(CoL12D2, 1L12D3)
CoL12D3 = OR(3L12D3, 2L12D3)

# FULLADDER LIV 12 BIT 4
1L12D4 = XOR(W_X4Y13, SL11D5)
2L12D4 = AND(W_X4Y13, SL11D5)
3L12D4 = AND(1L12D4, CoL12D3)
SL12D4 = XOR(CoL12D3, 1L12D4)
CoL12D4 = OR(3L12D4, 2L12D4)

# FULLADDER LIV 12 BIT 5
1L12D5 = XOR(W_X5Y13, SL11D6)
2L12D5 = AND(W_X5Y13, SL11D6)
3L12D5 = AND(1L12D5, CoL12D4)
SL12D5 = XOR(CoL12D4, 1L12D5)
CoL12D5 = OR(3L12D5, 2L12D5)

# FULLADDER LIV 12 BIT 6
1L12D6 = XOR(W_X6Y13, SL11D7)
2L12D6 = AND(W_X6Y13, SL11D7)
3L12D6 = AND(1L12D6, CoL12D5)
SL12D6 = XOR(CoL12D5, 1L12D6)
CoL12D6 = OR(3L12D6, 2L12D6)

# FULLADDER LIV 12 BIT 7
1L12D7 = XOR(W_X7Y13, SL11D8)
2L12D7 = AND(W_X7Y13, SL11D8)
3L12D7 = AND(1L12D7, CoL12D6)
SL12D7 = XOR(CoL12D6, 1L12D7)
CoL12D7 = OR(3L12D7, 2L12D7)

# FULLADDER LIV 12 BIT 8
1L12D8 = XOR(W_X8Y13, SL11D9)
2L12D8 = AND(W_X8Y13, SL11D9)
3L12D8 = AND(1L12D8, CoL12D7)
SL12D8 = XOR(CoL12D7, 1L12D8)
CoL12D8 = OR(3L12D8, 2L12D8)

# FULLADDER LIV 12 BIT 9
1L12D9 = XOR(W_X9Y13, SL11D10)
2L12D9 = AND(W_X9Y13, SL11D10)
3L12D9 = AND(1L12D9, CoL12D8)
SL12D9 = XOR(CoL12D8, 1L12D9)
CoL12D9 = OR(3L12D9, 2L12D9)

# FULLADDER LIV 12 BIT 10
1L12D10 = XOR(W_X10Y13, SL11D11)
2L12D10 = AND(W_X10Y13, SL11D11)
3L12D10 = AND(1L12D10, CoL12D9)
SL12D10 = XOR(CoL12D9, 1L12D10)
CoL12D10 = OR(3L12D10, 2L12D10)

# FULLADDER LIV 12 BIT 11
1L12D11 = XOR(W_X11Y13, SL11D12)
2L12D11 = AND(W_X11Y13, SL11D12)
3L12D11 = AND(1L12D11, CoL12D10)
SL12D11 = XOR(CoL12D10, 1L12D11)
CoL12D11 = OR(3L12D11, 2L12D11)

# FULLADDER LIV 12 BIT 12
1L12D12 = XOR(W_X12Y13, SL11D13)
2L12D12 = AND(W_X12Y13, SL11D13)
3L12D12 = AND(1L12D12, CoL12D11)
SL12D12 = XOR(CoL12D11, 1L12D12)
CoL12D12 = OR(3L12D12, 2L12D12)

# FULLADDER LIV 12 BIT 13
1L12D13 = XOR(W_X13Y13, SL11D14)
2L12D13 = AND(W_X13Y13, SL11D14)
3L12D13 = AND(1L12D13, CoL12D12)
SL12D13 = XOR(CoL12D12, 1L12D13)
CoL12D13 = OR(3L12D13, 2L12D13)

# FULLADDER LIV 12 BIT 14
1L12D14 = XOR(W_X14Y13, SL11D15)
2L12D14 = AND(W_X14Y13, SL11D15)
3L12D14 = AND(1L12D14, CoL12D13)
SL12D14 = XOR(CoL12D13, 1L12D14)
CoL12D14 = OR(3L12D14, 2L12D14)

# FULLADDER LIV 12 BIT 15
1L12D15 = XOR(W_X15Y13, CoL11D15)
2L12D15 = AND(W_X15Y13, CoL11D15)
3L12D15 = AND(1L12D15, CoL12D14)
SL12D15 = XOR(CoL12D14, 1L12D15)
CoL12D15 = OR(3L12D15, 2L12D15)

# RCA LIVELLO 13:

# HALFADDER LIV 13 BIT 0
SL13D0 = XOR(W_X0Y14, SL12D1)
CoL13D0 = AND(W_X0Y14, SL12D1)

# FULLADDER LIV 13 BIT 1
1L13D1 = XOR(W_X1Y14, SL12D2)
2L13D1 = AND(W_X1Y14, SL12D2)
3L13D1 = AND(1L13D1, CoL13D0)
SL13D1 = XOR(CoL13D0, 1L13D1)
CoL13D1 = OR(3L13D1, 2L13D1)

# FULLADDER LIV 13 BIT 2
1L13D2 = XOR(W_X2Y14, SL12D3)
2L13D2 = AND(W_X2Y14, SL12D3)
3L13D2 = AND(1L13D2, CoL13D1)
SL13D2 = XOR(CoL13D1, 1L13D2)
CoL13D2 = OR(3L13D2, 2L13D2)

# FULLADDER LIV 13 BIT 3
1L13D3 = XOR(W_X3Y14, SL12D4)
2L13D3 = AND(W_X3Y14, SL12D4)
3L13D3 = AND(1L13D3, CoL13D2)
SL13D3 = XOR(CoL13D2, 1L13D3)
CoL13D3 = OR(3L13D3, 2L13D3)

# FULLADDER LIV 13 BIT 4
1L13D4 = XOR(W_X4Y14, SL12D5)
2L13D4 = AND(W_X4Y14, SL12D5)
3L13D4 = AND(1L13D4, CoL13D3)
SL13D4 = XOR(CoL13D3, 1L13D4)
CoL13D4 = OR(3L13D4, 2L13D4)

# FULLADDER LIV 13 BIT 5
1L13D5 = XOR(W_X5Y14, SL12D6)
2L13D5 = AND(W_X5Y14, SL12D6)
3L13D5 = AND(1L13D5, CoL13D4)
SL13D5 = XOR(CoL13D4, 1L13D5)
CoL13D5 = OR(3L13D5, 2L13D5)

# FULLADDER LIV 13 BIT 6
1L13D6 = XOR(W_X6Y14, SL12D7)
2L13D6 = AND(W_X6Y14, SL12D7)
3L13D6 = AND(1L13D6, CoL13D5)
SL13D6 = XOR(CoL13D5, 1L13D6)
CoL13D6 = OR(3L13D6, 2L13D6)

# FULLADDER LIV 13 BIT 7
1L13D7 = XOR(W_X7Y14, SL12D8)
2L13D7 = AND(W_X7Y14, SL12D8)
3L13D7 = AND(1L13D7, CoL13D6)
SL13D7 = XOR(CoL13D6, 1L13D7)
CoL13D7 = OR(3L13D7, 2L13D7)

# FULLADDER LIV 13 BIT 8
1L13D8 = XOR(W_X8Y14, SL12D9)
2L13D8 = AND(W_X8Y14, SL12D9)
3L13D8 = AND(1L13D8, CoL13D7)
SL13D8 = XOR(CoL13D7, 1L13D8)
CoL13D8 = OR(3L13D8, 2L13D8)

# FULLADDER LIV 13 BIT 9
1L13D9 = XOR(W_X9Y14, SL12D10)
2L13D9 = AND(W_X9Y14, SL12D10)
3L13D9 = AND(1L13D9, CoL13D8)
SL13D9 = XOR(CoL13D8, 1L13D9)
CoL13D9 = OR(3L13D9, 2L13D9)

# FULLADDER LIV 13 BIT 10
1L13D10 = XOR(W_X10Y14, SL12D11)
2L13D10 = AND(W_X10Y14, SL12D11)
3L13D10 = AND(1L13D10, CoL13D9)
SL13D10 = XOR(CoL13D9, 1L13D10)
CoL13D10 = OR(3L13D10, 2L13D10)

# FULLADDER LIV 13 BIT 11
1L13D11 = XOR(W_X11Y14, SL12D12)
2L13D11 = AND(W_X11Y14, SL12D12)
3L13D11 = AND(1L13D11, CoL13D10)
SL13D11 = XOR(CoL13D10, 1L13D11)
CoL13D11 = OR(3L13D11, 2L13D11)

# FULLADDER LIV 13 BIT 12
1L13D12 = XOR(W_X12Y14, SL12D13)
2L13D12 = AND(W_X12Y14, SL12D13)
3L13D12 = AND(1L13D12, CoL13D11)
SL13D12 = XOR(CoL13D11, 1L13D12)
CoL13D12 = OR(3L13D12, 2L13D12)

# FULLADDER LIV 13 BIT 13
1L13D13 = XOR(W_X13Y14, SL12D14)
2L13D13 = AND(W_X13Y14, SL12D14)
3L13D13 = AND(1L13D13, CoL13D12)
SL13D13 = XOR(CoL13D12, 1L13D13)
CoL13D13 = OR(3L13D13, 2L13D13)

# FULLADDER LIV 13 BIT 14
1L13D14 = XOR(W_X14Y14, SL12D15)
2L13D14 = AND(W_X14Y14, SL12D15)
3L13D14 = AND(1L13D14, CoL13D13)
SL13D14 = XOR(CoL13D13, 1L13D14)
CoL13D14 = OR(3L13D14, 2L13D14)

# FULLADDER LIV 13 BIT 15
1L13D15 = XOR(W_X15Y14, CoL12D15)
2L13D15 = AND(W_X15Y14, CoL12D15)
3L13D15 = AND(1L13D15, CoL13D14)
SL13D15 = XOR(CoL13D14, 1L13D15)
CoL13D15 = OR(3L13D15, 2L13D15)

# RCA LIVELLO 14:

# HALFADDER LIV 14 BIT 0
SL14D0 = XOR(W_X0Y15, SL13D1)
CoL14D0 = AND(W_X0Y15, SL13D1)

# FULLADDER LIV 14 BIT 1
1L14D1 = XOR(W_X1Y15, SL13D2)
2L14D1 = AND(W_X1Y15, SL13D2)
3L14D1 = AND(1L14D1, CoL14D0)
SL14D1 = XOR(CoL14D0, 1L14D1)
CoL14D1 = OR(3L14D1, 2L14D1)

# FULLADDER LIV 14 BIT 2
1L14D2 = XOR(W_X2Y15, SL13D3)
2L14D2 = AND(W_X2Y15, SL13D3)
3L14D2 = AND(1L14D2, CoL14D1)
SL14D2 = XOR(CoL14D1, 1L14D2)
CoL14D2 = OR(3L14D2, 2L14D2)

# FULLADDER LIV 14 BIT 3
1L14D3 = XOR(W_X3Y15, SL13D4)
2L14D3 = AND(W_X3Y15, SL13D4)
3L14D3 = AND(1L14D3, CoL14D2)
SL14D3 = XOR(CoL14D2, 1L14D3)
CoL14D3 = OR(3L14D3, 2L14D3)

# FULLADDER LIV 14 BIT 4
1L14D4 = XOR(W_X4Y15, SL13D5)
2L14D4 = AND(W_X4Y15, SL13D5)
3L14D4 = AND(1L14D4, CoL14D3)
SL14D4 = XOR(CoL14D3, 1L14D4)
CoL14D4 = OR(3L14D4, 2L14D4)

# FULLADDER LIV 14 BIT 5
1L14D5 = XOR(W_X5Y15, SL13D6)
2L14D5 = AND(W_X5Y15, SL13D6)
3L14D5 = AND(1L14D5, CoL14D4)
SL14D5 = XOR(CoL14D4, 1L14D5)
CoL14D5 = OR(3L14D5, 2L14D5)

# FULLADDER LIV 14 BIT 6
1L14D6 = XOR(W_X6Y15, SL13D7)
2L14D6 = AND(W_X6Y15, SL13D7)
3L14D6 = AND(1L14D6, CoL14D5)
SL14D6 = XOR(CoL14D5, 1L14D6)
CoL14D6 = OR(3L14D6, 2L14D6)

# FULLADDER LIV 14 BIT 7
1L14D7 = XOR(W_X7Y15, SL13D8)
2L14D7 = AND(W_X7Y15, SL13D8)
3L14D7 = AND(1L14D7, CoL14D6)
SL14D7 = XOR(CoL14D6, 1L14D7)
CoL14D7 = OR(3L14D7, 2L14D7)

# FULLADDER LIV 14 BIT 8
1L14D8 = XOR(W_X8Y15, SL13D9)
2L14D8 = AND(W_X8Y15, SL13D9)
3L14D8 = AND(1L14D8, CoL14D7)
SL14D8 = XOR(CoL14D7, 1L14D8)
CoL14D8 = OR(3L14D8, 2L14D8)

# FULLADDER LIV 14 BIT 9
1L14D9 = XOR(W_X9Y15, SL13D10)
2L14D9 = AND(W_X9Y15, SL13D10)
3L14D9 = AND(1L14D9, CoL14D8)
SL14D9 = XOR(CoL14D8, 1L14D9)
CoL14D9 = OR(3L14D9, 2L14D9)

# FULLADDER LIV 14 BIT 10
1L14D10 = XOR(W_X10Y15, SL13D11)
2L14D10 = AND(W_X10Y15, SL13D11)
3L14D10 = AND(1L14D10, CoL14D9)
SL14D10 = XOR(CoL14D9, 1L14D10)
CoL14D10 = OR(3L14D10, 2L14D10)

# FULLADDER LIV 14 BIT 11
1L14D11 = XOR(W_X11Y15, SL13D12)
2L14D11 = AND(W_X11Y15, SL13D12)
3L14D11 = AND(1L14D11, CoL14D10)
SL14D11 = XOR(CoL14D10, 1L14D11)
CoL14D11 = OR(3L14D11, 2L14D11)

# FULLADDER LIV 14 BIT 12
1L14D12 = XOR(W_X12Y15, SL13D13)
2L14D12 = AND(W_X12Y15, SL13D13)
3L14D12 = AND(1L14D12, CoL14D11)
SL14D12 = XOR(CoL14D11, 1L14D12)
CoL14D12 = OR(3L14D12, 2L14D12)

# FULLADDER LIV 14 BIT 13
1L14D13 = XOR(W_X13Y15, SL13D14)
2L14D13 = AND(W_X13Y15, SL13D14)
3L14D13 = AND(1L14D13, CoL14D12)
SL14D13 = XOR(CoL14D12, 1L14D13)
CoL14D13 = OR(3L14D13, 2L14D13)

# FULLADDER LIV 14 BIT 14
1L14D14 = XOR(W_X14Y15, SL13D15)
2L14D14 = AND(W_X14Y15, SL13D15)
3L14D14 = AND(1L14D14, CoL14D13)
SL14D14 = XOR(CoL14D13, 1L14D14)
CoL14D14 = OR(3L14D14, 2L14D14)

# FULLADDER LIV 14 BIT 15
1L14D15 = XOR(W_X15Y15, CoL13D15)
2L14D15 = AND(W_X15Y15, CoL13D15)
3L14D15 = AND(1L14D15, CoL14D14)
SL14D15 = XOR(CoL14D14, 1L14D15)
CoL14D15 = OR(3L14D15, 2L14D15)

# 3) Ripple carry adder in cascata al moltiplicatore

# HALFADDER RCA BIT 0
S0 = XOR(W_X0Y0, R0)
Co0 = AND(W_X0Y0, R0)

# FULLADDER RCA BIT 1 (Livello precedente)
11 = XOR(SL0D0, R1)
21 = AND(SL0D0, R1)
31 = AND(11, Co0)
S1 = XOR(Co0, 11)
Co1 = OR(31, 21)

# FULLADDER RCA BIT 2 (Livello precedente)
12 = XOR(SL1D0, R2)
22 = AND(SL1D0, R2)
32 = AND(12, Co1)
S2 = XOR(Co1, 12)
Co2 = OR(32, 22)

# FULLADDER RCA BIT 3 (Livello precedente)
13 = XOR(SL2D0, R3)
23 = AND(SL2D0, R3)
33 = AND(13, Co2)
S3 = XOR(Co2, 13)
Co3 = OR(33, 23)

# FULLADDER RCA BIT 4 (Livello precedente)
14 = XOR(SL3D0, R4)
24 = AND(SL3D0, R4)
34 = AND(14, Co3)
S4 = XOR(Co3, 14)
Co4 = OR(34, 24)

# FULLADDER RCA BIT 5 (Livello precedente)
15 = XOR(SL4D0, R5)
25 = AND(SL4D0, R5)
35 = AND(15, Co4)
S5 = XOR(Co4, 15)
Co5 = OR(35, 25)

# FULLADDER RCA BIT 6 (Livello precedente)
16 = XOR(SL5D0, R6)
26 = AND(SL5D0, R6)
36 = AND(16, Co5)
S6 = XOR(Co5, 16)
Co6 = OR(36, 26)

# FULLADDER RCA BIT 7 (Livello precedente)
17 = XOR(SL6D0, R7)
27 = AND(SL6D0, R7)
37 = AND(17, Co6)
S7 = XOR(Co6, 17)
Co7 = OR(37, 27)

# FULLADDER RCA BIT 8 (Livello precedente)
18 = XOR(SL7D0, R8)
28 = AND(SL7D0, R8)
38 = AND(18, Co7)
S8 = XOR(Co7, 18)
Co8 = OR(38, 28)

# FULLADDER RCA BIT 9 (Livello precedente)
19 = XOR(SL8D0, R9)
29 = AND(SL8D0, R9)
39 = AND(19, Co8)
S9 = XOR(Co8, 19)
Co9 = OR(39, 29)

# FULLADDER RCA BIT 10 (Livello precedente)
110 = XOR(SL9D0, R10)
210 = AND(SL9D0, R10)
310 = AND(110, Co9)
S10 = XOR(Co9, 110)
Co10 = OR(310, 210)

# FULLADDER RCA BIT 11 (Livello precedente)
111 = XOR(SL10D0, R11)
211 = AND(SL10D0, R11)
311 = AND(111, Co10)
S11 = XOR(Co10, 111)
Co11 = OR(311, 211)

# FULLADDER RCA BIT 12 (Livello precedente)
112 = XOR(SL11D0, R12)
212 = AND(SL11D0, R12)
312 = AND(112, Co11)
S12 = XOR(Co11, 112)
Co12 = OR(312, 212)

# FULLADDER RCA BIT 13 (Livello precedente)
113 = XOR(SL12D0, R13)
213 = AND(SL12D0, R13)
313 = AND(113, Co12)
S13 = XOR(Co12, 113)
Co13 = OR(313, 213)

# FULLADDER RCA BIT 14 (Livello precedente)
114 = XOR(SL13D0, R14)
214 = AND(SL13D0, R14)
314 = AND(114, Co13)
S14 = XOR(Co13, 114)
Co14 = OR(314, 214)

# FULLADDER RCA INGRESSO BIT 15 (Ultimo livello)
115 = XOR(SL14D0, R15)
215 = AND(SL14D0, R15)
315 = AND(115, Co14)
S15 = XOR(Co14, 115)
Co15 = OR(315, 215)

# FULLADDER RCA INGRESSO BIT 16 (Ultimo livello)
116 = XOR(SL14D1, R16)
216 = AND(SL14D1, R16)
316 = AND(116, Co15)
S16 = XOR(Co15, 116)
Co16 = OR(316, 216)

# FULLADDER RCA INGRESSO BIT 17 (Ultimo livello)
117 = XOR(SL14D2, R17)
217 = AND(SL14D2, R17)
317 = AND(117, Co16)
S17 = XOR(Co16, 117)
Co17 = OR(317, 217)

# FULLADDER RCA INGRESSO BIT 18 (Ultimo livello)
118 = XOR(SL14D3, R18)
218 = AND(SL14D3, R18)
318 = AND(118, Co17)
S18 = XOR(Co17, 118)
Co18 = OR(318, 218)

# FULLADDER RCA INGRESSO BIT 19 (Ultimo livello)
119 = XOR(SL14D4, R19)
219 = AND(SL14D4, R19)
319 = AND(119, Co18)
S19 = XOR(Co18, 119)
Co19 = OR(319, 219)

# FULLADDER RCA INGRESSO BIT 20 (Ultimo livello)
120 = XOR(SL14D5, R20)
220 = AND(SL14D5, R20)
320 = AND(120, Co19)
S20 = XOR(Co19, 120)
Co20 = OR(320, 220)

# FULLADDER RCA INGRESSO BIT 21 (Ultimo livello)
121 = XOR(SL14D6, R21)
221 = AND(SL14D6, R21)
321 = AND(121, Co20)
S21 = XOR(Co20, 121)
Co21 = OR(321, 221)

# FULLADDER RCA INGRESSO BIT 22 (Ultimo livello)
122 = XOR(SL14D7, R22)
222 = AND(SL14D7, R22)
322 = AND(122, Co21)
S22 = XOR(Co21, 122)
Co22 = OR(322, 222)

# FULLADDER RCA INGRESSO BIT 23 (Ultimo livello)
123 = XOR(SL14D8, R23)
223 = AND(SL14D8, R23)
323 = AND(123, Co22)
S23 = XOR(Co22, 123)
Co23 = OR(323, 223)

# FULLADDER RCA INGRESSO BIT 24 (Ultimo livello)
124 = XOR(SL14D9, R24)
224 = AND(SL14D9, R24)
324 = AND(124, Co23)
S24 = XOR(Co23, 124)
Co24 = OR(324, 224)

# FULLADDER RCA INGRESSO BIT 25 (Ultimo livello)
125 = XOR(SL14D10, R25)
225 = AND(SL14D10, R25)
325 = AND(125, Co24)
S25 = XOR(Co24, 125)
Co25 = OR(325, 225)

# FULLADDER RCA INGRESSO BIT 26 (Ultimo livello)
126 = XOR(SL14D11, R26)
226 = AND(SL14D11, R26)
326 = AND(126, Co25)
S26 = XOR(Co25, 126)
Co26 = OR(326, 226)

# FULLADDER RCA INGRESSO BIT 27 (Ultimo livello)
127 = XOR(SL14D12, R27)
227 = AND(SL14D12, R27)
327 = AND(127, Co26)
S27 = XOR(Co26, 127)
Co27 = OR(327, 227)

# FULLADDER RCA INGRESSO BIT 28 (Ultimo livello)
128 = XOR(SL14D13, R28)
228 = AND(SL14D13, R28)
328 = AND(128, Co27)
S28 = XOR(Co27, 128)
Co28 = OR(328, 228)

# FULLADDER RCA INGRESSO BIT 29 (Ultimo livello)
129 = XOR(SL14D14, R29)
229 = AND(SL14D14, R29)
329 = AND(129, Co28)
S29 = XOR(Co28, 129)
Co29 = OR(329, 229)

# FULLADDER RCA INGRESSO BIT 30 (Ultimo livello)
130 = XOR(SL14D15, R30)
230 = AND(SL14D15, R30)
330 = AND(130, Co29)
S30 = XOR(Co29, 130)
Co30 = OR(330, 230)

# Visto che il carry out sarebbe floating metto un halfadder
# HALFADDER RCA INGRESSO BIT 31
131 = XOR(CoL14D15, R31)
S31 = XOR(Co30, 131)

# 4) Registro R di 32 bit
R0 = DFF(S0)
OUTPUT(R0)
R1 = DFF(S1)
OUTPUT(R1)
R2 = DFF(S2)
OUTPUT(R2)
R3 = DFF(S3)
OUTPUT(R3)
R4 = DFF(S4)
OUTPUT(R4)
R5 = DFF(S5)
OUTPUT(R5)
R6 = DFF(S6)
OUTPUT(R6)
R7 = DFF(S7)
OUTPUT(R7)
R8 = DFF(S8)
OUTPUT(R8)
R9 = DFF(S9)
OUTPUT(R9)
R10 = DFF(S10)
OUTPUT(R10)
R11 = DFF(S11)
OUTPUT(R11)
R12 = DFF(S12)
OUTPUT(R12)
R13 = DFF(S13)
OUTPUT(R13)
R14 = DFF(S14)
OUTPUT(R14)
R15 = DFF(S15)
OUTPUT(R15)
R16 = DFF(S16)
OUTPUT(R16)
R17 = DFF(S17)
OUTPUT(R17)
R18 = DFF(S18)
OUTPUT(R18)
R19 = DFF(S19)
OUTPUT(R19)
R20 = DFF(S20)
OUTPUT(R20)
R21 = DFF(S21)
OUTPUT(R21)
R22 = DFF(S22)
OUTPUT(R22)
R23 = DFF(S23)
OUTPUT(R23)
R24 = DFF(S24)
OUTPUT(R24)
R25 = DFF(S25)
OUTPUT(R25)
R26 = DFF(S26)
OUTPUT(R26)
R27 = DFF(S27)
OUTPUT(R27)
R28 = DFF(S28)
OUTPUT(R28)
R29 = DFF(S29)
OUTPUT(R29)
R30 = DFF(S30)
OUTPUT(R30)
R31 = DFF(S31)
OUTPUT(R31)